{"version":3,"file":"video-WdHOvwN0.js","sources":["../node_modules/@yume-chan/no-data-view/esm/uint32.js","../node_modules/@yume-chan/scrcpy/esm/base/video.js","../node_modules/@yume-chan/stream-extra/esm/stream.js","../node_modules/@yume-chan/scrcpy/esm/codec/av1.js","../node_modules/@yume-chan/scrcpy/esm/codec/nalu.js","../node_modules/@yume-chan/scrcpy/esm/codec/h264.js","../node_modules/@yume-chan/scrcpy/esm/codec/h265.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/codec/utils.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/codec/av1.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/codec/h26x.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/codec/h264.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/codec/h265.js","../node_modules/@yume-chan/event/esm/event-emitter.js","../node_modules/@yume-chan/event/esm/sticky-event-emitter.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/pool.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/snapshot.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/decoder.js","../node_modules/yuv-canvas/src/FrameSink.js","../node_modules/yuv-canvas/src/depower.js","../node_modules/yuv-canvas/src/YCbCr.js","../node_modules/yuv-canvas/src/SoftwareFrameSink.js","../node_modules/yuv-canvas/src/yuv-canvas.js","../node_modules/yuv-canvas/src/WebGLFrameSink.js","../node_modules/yuv-canvas/build/shaders.js","../node_modules/@yume-chan/scrcpy-decoder-tinyh264/esm/decoder.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/render/canvas.js","../node_modules/@yume-chan/scrcpy-decoder-webcodecs/esm/video/render/webgl.js","../src/components/scrcpy/video.ts"],"sourcesContent":["/* #__NO_SIDE_EFFECTS__ */\nexport function getUint32LittleEndian(buffer, offset) {\n    return ((buffer[offset] |\n        (buffer[offset + 1] << 8) |\n        (buffer[offset + 2] << 16) |\n        (buffer[offset + 3] << 24)) >>>\n        0);\n}\n/* #__NO_SIDE_EFFECTS__ */\nexport function getUint32BigEndian(buffer, offset) {\n    return (((buffer[offset] << 24) |\n        (buffer[offset + 1] << 16) |\n        (buffer[offset + 2] << 8) |\n        buffer[offset + 3]) >>>\n        0);\n}\n/* #__NO_SIDE_EFFECTS__ */\nexport function getUint32(buffer, offset, littleEndian) {\n    return littleEndian\n        ? (buffer[offset] |\n            (buffer[offset + 1] << 8) |\n            (buffer[offset + 2] << 16) |\n            (buffer[offset + 3] << 24)) >>>\n            0\n        : ((buffer[offset] << 24) |\n            (buffer[offset + 1] << 16) |\n            (buffer[offset + 2] << 8) |\n            buffer[offset + 3]) >>>\n            0;\n}\nexport function setUint32LittleEndian(buffer, offset, value) {\n    buffer[offset] = value;\n    buffer[offset + 1] = value >> 8;\n    buffer[offset + 2] = value >> 16;\n    buffer[offset + 3] = value >> 24;\n}\nexport function setUint32BigEndian(buffer, offset, value) {\n    buffer[offset] = value >> 24;\n    buffer[offset + 1] = value >> 16;\n    buffer[offset + 2] = value >> 8;\n    buffer[offset + 3] = value;\n}\nexport function setUint32(buffer, offset, value, littleEndian) {\n    if (littleEndian) {\n        buffer[offset] = value;\n        buffer[offset + 1] = value >> 8;\n        buffer[offset + 2] = value >> 16;\n        buffer[offset + 3] = value >> 24;\n    }\n    else {\n        buffer[offset] = value >> 24;\n        buffer[offset + 1] = value >> 16;\n        buffer[offset + 2] = value >> 8;\n        buffer[offset + 3] = value;\n    }\n}\n//# sourceMappingURL=uint32.js.map","export const ScrcpyVideoCodecId = {\n    H264: 0x68_32_36_34,\n    H265: 0x68_32_36_35,\n    AV1: 0x00_61_76_31,\n};\nexport const ScrcpyVideoCodecNameMap = /* #__PURE__ */ (() => {\n    const result = new Map();\n    for (const key in ScrcpyVideoCodecId) {\n        const value = ScrcpyVideoCodecId[key];\n        result.set(value, key);\n    }\n    return result;\n})();\n//# sourceMappingURL=video.js.map","export * from \"./types.js\";\nexport { ReadableStream };\nexport const { AbortController } = globalThis;\nconst ReadableStream = /* #__PURE__ */ (() => {\n    const { ReadableStream } = globalThis;\n    if (!ReadableStream.from) {\n        ReadableStream.from = function (iterable) {\n            const iterator = Symbol.asyncIterator in iterable\n                ? iterable[Symbol.asyncIterator]()\n                : iterable[Symbol.iterator]();\n            return new ReadableStream({\n                async pull(controller) {\n                    const result = await iterator.next();\n                    if (result.done) {\n                        controller.close();\n                        return;\n                    }\n                    controller.enqueue(result.value);\n                },\n                async cancel(reason) {\n                    await iterator.return?.(reason);\n                },\n            });\n        };\n    }\n    if (!ReadableStream.prototype[Symbol.asyncIterator] ||\n        !ReadableStream.prototype.values) {\n        ReadableStream.prototype.values = async function* (options) {\n            const reader = this.getReader();\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        return;\n                    }\n                    yield value;\n                }\n            }\n            finally {\n                // Calling `iterator.return` will enter this `finally` block.\n                // We don't need to care about the parameter to `iterator.return`,\n                // it will be returned as the final `result.value` automatically.\n                if (!options?.preventCancel) {\n                    await reader.cancel();\n                }\n                reader.releaseLock();\n            }\n        };\n        ReadableStream.prototype[Symbol.asyncIterator] =\n            // eslint-disable-next-line @typescript-eslint/unbound-method\n            ReadableStream.prototype.values;\n    }\n    return ReadableStream;\n})();\nexport const { WritableStream, TransformStream } = globalThis;\n//# sourceMappingURL=stream.js.map","// cspell: ignore uvlc\n// cspell: ignore interintra\n// cspell: ignore superres\n// cspell: ignore cdef\n// cspell: ignore bitdepth\n// cspell: ignore Smpte\n// cspell: ignore Chromat\nexport const AndroidAv1Profile = {\n    Main8: 1 << 0,\n    Main10: 1 << 1,\n    Main10Hdr10: 1 << 12,\n    Main10Hdr10Plus: 1 << 13,\n};\nexport const AndroidAv1Level = {\n    Level2: 1 << 0,\n    Level21: 1 << 1,\n    Level22: 1 << 2,\n    Level23: 1 << 3,\n    Level3: 1 << 4,\n    Level31: 1 << 5,\n    Level32: 1 << 6,\n    Level33: 1 << 7,\n    Level4: 1 << 8,\n    Level41: 1 << 9,\n    Level42: 1 << 10,\n    Level43: 1 << 11,\n    Level5: 1 << 12,\n    Level51: 1 << 13,\n    Level52: 1 << 14,\n    Level53: 1 << 15,\n    Level6: 1 << 16,\n    Level61: 1 << 17,\n    Level62: 1 << 18,\n    Level63: 1 << 19,\n    Level7: 1 << 20,\n    Level71: 1 << 21,\n    Level72: 1 << 22,\n    Level73: 1 << 23,\n};\nclass BitReader {\n    #data;\n    #byte;\n    #bytePosition = 0;\n    #bitPosition = 7;\n    get byteAligned() {\n        return this.#bitPosition === 7;\n    }\n    get ended() {\n        return this.#bytePosition >= this.#data.length;\n    }\n    constructor(data) {\n        this.#data = data;\n        this.#byte = data[0];\n    }\n    f1() {\n        const value = this.#byte >> this.#bitPosition;\n        this.#bitPosition -= 1;\n        if (this.#bitPosition < 0) {\n            this.#bytePosition += 1;\n            this.#bitPosition = 7;\n            this.#byte = this.#data[this.#bytePosition];\n        }\n        return value & 1;\n    }\n    f(n) {\n        let value = 0;\n        for (; n > 0; n -= 1) {\n            value <<= 1;\n            value |= this.f1();\n        }\n        return value;\n    }\n    skip(n) {\n        if (n <= this.#bitPosition + 1) {\n            this.#bytePosition += 1;\n            this.#bitPosition = 7;\n            this.#byte = this.#data[this.#bytePosition];\n            return;\n        }\n        n -= this.#bitPosition + 1;\n        this.#bytePosition += 1;\n        const bytes = (n / 8) | 0;\n        if (bytes > 0) {\n            this.#bytePosition += bytes;\n            n -= bytes * 8;\n        }\n        this.#bitPosition = 7 - n;\n        this.#byte = this.#data[this.#bytePosition];\n    }\n    readBytes(n) {\n        if (!this.byteAligned) {\n            throw new Error(\"Bytes must be byte-aligned\");\n        }\n        const value = this.#data.subarray(this.#bytePosition, this.#bytePosition + n);\n        this.#bytePosition += n;\n        this.#byte = this.#data[this.#bytePosition];\n        return value;\n    }\n    getPosition() {\n        return [this.#bytePosition, this.#bitPosition];\n    }\n    setPosition([bytePosition, bitPosition]) {\n        this.#bytePosition = bytePosition;\n        this.#bitPosition = bitPosition;\n        this.#byte = this.#data[bytePosition];\n    }\n}\nconst ObuType = {\n    SequenceHeader: 1,\n    TemporalDelimiter: 2,\n    FrameHeader: 3,\n    TileGroup: 4,\n    Metadata: 5,\n    Frame: 6,\n    RedundantFrameHeader: 7,\n    TileList: 8,\n    Padding: 15,\n};\nconst ColorPrimaries = {\n    Bt709: 1,\n    Unspecified: 2,\n    Bt470M: 4,\n    Bt470BG: 5,\n    Bt601: 6,\n    Smpte240: 7,\n    GenericFilm: 8,\n    Bt2020: 9,\n    Xyz: 10,\n    Smpte431: 11,\n    Smpte432: 12,\n    Ebu3213: 22,\n};\nconst TransferCharacteristics = {\n    Bt709: 1,\n    Unspecified: 2,\n    Bt470M: 4,\n    Bt470BG: 5,\n    Bt601: 6,\n    Smpte240: 7,\n    Linear: 8,\n    Log100: 9,\n    Log100Sqrt10: 10,\n    Iec61966: 11,\n    Bt1361: 12,\n    Srgb: 13,\n    Bt2020Ten: 14,\n    Bt2020Twelve: 15,\n    Smpte2084: 16,\n    Smpte428: 17,\n    Hlg: 18,\n};\nconst MatrixCoefficients = {\n    Identity: 0,\n    Bt709: 1,\n    Unspecified: 2,\n    Fcc: 4,\n    Bt470BG: 5,\n    Bt601: 6,\n    Smpte240: 7,\n    YCgCo: 8,\n    Bt2020Ncl: 9,\n    Bt2020Cl: 10,\n    Smpte2085: 11,\n    ChromatNcl: 12,\n    ChromatCl: 13,\n    ICtCp: 14,\n};\nexport class Av1 extends BitReader {\n    static ObuType = ObuType;\n    static ColorPrimaries = ColorPrimaries;\n    static TransferCharacteristics = TransferCharacteristics;\n    static MatrixCoefficients = MatrixCoefficients;\n    #Leb128Bytes = 0;\n    uvlc() {\n        let leadingZeros = 0;\n        while (!this.f1()) {\n            leadingZeros += 1;\n        }\n        if (leadingZeros >= 32) {\n            return 2 ** 32 - 1;\n        }\n        const value = this.f(leadingZeros);\n        return value + ((1 << leadingZeros) >>> 0) - 1;\n    }\n    leb128() {\n        if (!this.byteAligned) {\n            throw new Error(\"LEB128 must be byte-aligned\");\n        }\n        let value = 0n;\n        this.#Leb128Bytes = 0;\n        for (let i = 0n; i < 8n; i += 1n) {\n            const leb128_byte = this.f(8);\n            value |= BigInt(leb128_byte & 0x7f) << (7n * i);\n            this.#Leb128Bytes += 1;\n            if ((leb128_byte & 0x80) == 0) {\n                break;\n            }\n        }\n        return value;\n    }\n    *annexBBitstream() {\n        while (!this.ended) {\n            const temporal_unit_size = this.leb128();\n            yield* this.temporalUnit(temporal_unit_size);\n        }\n    }\n    *temporalUnit(sz) {\n        while (sz > 0) {\n            const frame_unit_size = this.leb128();\n            sz -= BigInt(this.#Leb128Bytes);\n            yield* this.frameUnit(frame_unit_size);\n            sz -= frame_unit_size;\n        }\n    }\n    *frameUnit(sz) {\n        while (sz > 0) {\n            const obu_length = this.leb128();\n            sz -= BigInt(this.#Leb128Bytes);\n            const obu = this.openBitstreamUnit(obu_length);\n            if (obu) {\n                yield obu;\n            }\n            sz -= obu_length;\n        }\n    }\n    #OperatingPointIdc = 0;\n    openBitstreamUnit(sz) {\n        const obu_header = this.obuHeader();\n        let obu_size;\n        if (obu_header.obu_has_size_field) {\n            obu_size = this.leb128();\n        }\n        else if (sz !== undefined) {\n            obu_size = sz - 1n - (obu_header.obu_extension_flag ? 1n : 0n);\n        }\n        else {\n            throw new Error(\"obu_has_size_field must be true\");\n        }\n        const startPosition = this.getPosition();\n        if (obu_header.obu_type !== Av1.ObuType.SequenceHeader &&\n            obu_header.obu_type !== Av1.ObuType.TemporalDelimiter &&\n            this.#OperatingPointIdc !== 0 &&\n            obu_header.obu_extension_header) {\n            const inTemporalLayer = !!(this.#OperatingPointIdc &\n                (1 << obu_header.obu_extension_header.temporal_id));\n            const inSpatialLayer = !!(this.#OperatingPointIdc &\n                (1 << (obu_header.obu_extension_header.spatial_id + 8)));\n            if (!inTemporalLayer || !inSpatialLayer) {\n                this.skip(Number(obu_size));\n                return;\n            }\n        }\n        let sequence_header_obu;\n        switch (obu_header.obu_type) {\n            case Av1.ObuType.SequenceHeader:\n                sequence_header_obu = this.sequenceHeaderObu();\n                break;\n        }\n        const currentPosition = this.getPosition();\n        const payloadBits = (currentPosition[0] - startPosition[0]) * 8 +\n            (startPosition[1] - currentPosition[1]);\n        if (obu_size > 0 /* &&\n        obu_header.obu_type !== Av1.ObuType.TileGroup &&\n        obu_header.obu_type !== Av1.ObuType.TileList &&\n        obu_header.obu_type !== Av1.ObuType.Frame */) {\n            this.skip(Number(obu_size) * 8 - payloadBits);\n        }\n        return {\n            obu_header,\n            obu_size,\n            sequence_header_obu,\n        };\n    }\n    obuHeader() {\n        const obu_forbidden_bit = !!this.f1();\n        if (obu_forbidden_bit) {\n            throw new Error(\"Invalid data\");\n        }\n        const obu_type = this.f(4);\n        const obu_extension_flag = !!this.f1();\n        const obu_has_size_field = !!this.f1();\n        this.f1();\n        let obu_extension_header;\n        if (obu_extension_flag) {\n            obu_extension_header = this.obuExtensionHeader();\n        }\n        return {\n            obu_type,\n            obu_extension_flag,\n            obu_has_size_field,\n            obu_extension_header,\n        };\n    }\n    obuExtensionHeader() {\n        const temporal_id = this.f(3);\n        const spatial_id = this.f(2);\n        this.skip(3);\n        return { temporal_id, spatial_id };\n    }\n    static SelectScreenContentTools = 2;\n    static SelectIntegerMv = 2;\n    sequenceHeaderObu() {\n        const seq_profile = this.f(3);\n        const still_picture = !!this.f1();\n        const reduced_still_picture_header = !!this.f1();\n        let timing_info_present_flag = false;\n        let timing_info;\n        let decoder_model_info_present_flag = false;\n        let decoder_model_info;\n        let initial_display_delay_present_flag = false;\n        let operating_points_cnt_minus_1 = 0;\n        const operating_point_idc = [];\n        const seq_level_idx = [];\n        const seq_tier = [];\n        const decoder_model_present_for_this_op = [];\n        const initial_display_delay_present_for_this_op = [];\n        let operating_parameters_info;\n        let initial_display_delay_minus_1;\n        if (reduced_still_picture_header) {\n            operating_point_idc[0] = 0;\n            seq_level_idx[0] = this.f(5);\n            seq_tier[0] = 0;\n            decoder_model_present_for_this_op[0] = false;\n            initial_display_delay_present_for_this_op[0] = false;\n        }\n        else {\n            timing_info_present_flag = !!this.f1();\n            if (timing_info_present_flag) {\n                timing_info = this.timingInfo();\n                decoder_model_info_present_flag = !!this.f1();\n                if (decoder_model_info_present_flag) {\n                    decoder_model_info = this.decoderModelInfo();\n                    operating_parameters_info = [];\n                }\n            }\n            initial_display_delay_present_flag = !!this.f1();\n            if (initial_display_delay_present_flag) {\n                initial_display_delay_minus_1 = [];\n            }\n            operating_points_cnt_minus_1 = this.f(5);\n            for (let i = 0; i <= operating_points_cnt_minus_1; i += 1) {\n                operating_point_idc[i] = this.f(12);\n                seq_level_idx[i] = this.f(5);\n                if (seq_level_idx[i] > 7) {\n                    seq_tier[i] = this.f1();\n                }\n                else {\n                    seq_tier[i] = 0;\n                }\n                if (decoder_model_info_present_flag) {\n                    decoder_model_present_for_this_op[i] = !!this.f1();\n                    if (decoder_model_present_for_this_op[i]) {\n                        operating_parameters_info[i] =\n                            this.operatingParametersInfo(decoder_model_info);\n                    }\n                }\n                else {\n                    decoder_model_present_for_this_op[i] = false;\n                }\n                if (initial_display_delay_present_flag) {\n                    initial_display_delay_present_for_this_op[i] = !!this.f1();\n                    if (initial_display_delay_present_for_this_op[i]) {\n                        initial_display_delay_minus_1[i] = this.f(4);\n                    }\n                }\n            }\n        }\n        const operatingPoint = this.chooseOperatingPoint();\n        this.#OperatingPointIdc = operating_point_idc[operatingPoint];\n        const frame_width_bits_minus_1 = this.f(4);\n        const frame_height_bits_minus_1 = this.f(4);\n        const max_frame_width_minus_1 = this.f(frame_width_bits_minus_1 + 1);\n        const max_frame_height_minus_1 = this.f(frame_height_bits_minus_1 + 1);\n        let frame_id_numbers_present_flag = false;\n        let delta_frame_id_length_minus_2;\n        let additional_frame_id_length_minus_1;\n        if (!reduced_still_picture_header) {\n            frame_id_numbers_present_flag = !!this.f1();\n            if (frame_id_numbers_present_flag) {\n                delta_frame_id_length_minus_2 = this.f(4);\n                additional_frame_id_length_minus_1 = this.f(3);\n            }\n        }\n        const use_128x128_superblock = !!this.f1();\n        const enable_filter_intra = !!this.f1();\n        const enable_intra_edge_filter = !!this.f1();\n        let enable_interintra_compound = false;\n        let enable_masked_compound = false;\n        let enable_warped_motion = false;\n        let enable_dual_filter = false;\n        let enable_order_hint = false;\n        let enable_jnt_comp = false;\n        let enable_ref_frame_mvs = false;\n        let seq_choose_screen_content_tools = false;\n        let seq_force_screen_content_tools = Av1.SelectScreenContentTools;\n        let seq_choose_integer_mv = false;\n        let seq_force_integer_mv = Av1.SelectIntegerMv;\n        let order_hint_bits_minus_1;\n        // let OrderHintBits = 0;\n        if (!reduced_still_picture_header) {\n            enable_interintra_compound = !!this.f1();\n            enable_masked_compound = !!this.f1();\n            enable_warped_motion = !!this.f1();\n            enable_dual_filter = !!this.f1();\n            enable_order_hint = !!this.f1();\n            if (enable_order_hint) {\n                enable_jnt_comp = !!this.f1();\n                enable_ref_frame_mvs = !!this.f1();\n            }\n            seq_choose_screen_content_tools = !!this.f1();\n            if (!seq_choose_screen_content_tools) {\n                seq_force_screen_content_tools = this.f1();\n            }\n            if (seq_force_screen_content_tools > 0) {\n                seq_choose_integer_mv = !!this.f1();\n                if (!seq_choose_integer_mv) {\n                    seq_force_integer_mv = this.f1();\n                }\n            }\n            if (enable_order_hint) {\n                order_hint_bits_minus_1 = this.f(3);\n                // OrderHintBits = order_hint_bits_minus_1 + 1;\n            }\n        }\n        const enable_superres = !!this.f1();\n        const enable_cdef = !!this.f1();\n        const enable_restoration = !!this.f1();\n        const color_config = this.colorConfig(seq_profile);\n        const film_grain_params_present = !!this.f1();\n        return {\n            seq_profile,\n            still_picture,\n            reduced_still_picture_header,\n            timing_info_present_flag,\n            timing_info,\n            decoder_model_info_present_flag,\n            decoder_model_info,\n            initial_display_delay_present_flag,\n            initial_display_delay_minus_1,\n            operating_points_cnt_minus_1,\n            operating_point_idc,\n            seq_level_idx,\n            seq_tier,\n            decoder_model_present_for_this_op,\n            operating_parameters_info,\n            initial_display_delay_present_for_this_op,\n            frame_width_bits_minus_1,\n            frame_height_bits_minus_1,\n            max_frame_width_minus_1,\n            max_frame_height_minus_1,\n            frame_id_numbers_present_flag,\n            delta_frame_id_length_minus_2,\n            additional_frame_id_length_minus_1,\n            use_128x128_superblock,\n            enable_filter_intra,\n            enable_intra_edge_filter,\n            enable_interintra_compound,\n            enable_masked_compound,\n            enable_warped_motion,\n            enable_dual_filter,\n            enable_order_hint,\n            enable_jnt_comp,\n            enable_ref_frame_mvs,\n            seq_choose_screen_content_tools,\n            seq_force_screen_content_tools,\n            seq_choose_integer_mv,\n            seq_force_integer_mv,\n            order_hint_bits_minus_1,\n            enable_superres,\n            enable_cdef,\n            enable_restoration,\n            color_config,\n            film_grain_params_present,\n        };\n    }\n    searchSequenceHeaderObu() {\n        while (!this.ended) {\n            const obu = this.openBitstreamUnit();\n            if (!obu) {\n                continue;\n            }\n            if (obu.sequence_header_obu) {\n                return obu.sequence_header_obu;\n            }\n        }\n        return undefined;\n    }\n    timingInfo() {\n        const num_units_in_display_tick = this.f(32);\n        const time_scale = this.f(32);\n        const equal_picture_interval = !!this.f1();\n        let num_ticks_per_picture_minus_1;\n        if (equal_picture_interval) {\n            num_ticks_per_picture_minus_1 = this.uvlc();\n        }\n        return {\n            num_units_in_display_tick,\n            time_scale,\n            equal_picture_interval,\n            num_ticks_per_picture_minus_1,\n        };\n    }\n    decoderModelInfo() {\n        const buffer_delay_length_minus_1 = this.f(5);\n        const num_units_in_decoding_tick = this.f(32);\n        const buffer_removal_time_length_minus_1 = this.f(5);\n        const frame_presentation_time_length_minus_1 = this.f(5);\n        return {\n            buffer_delay_length_minus_1,\n            num_units_in_decoding_tick,\n            buffer_removal_time_length_minus_1,\n            frame_presentation_time_length_minus_1,\n        };\n    }\n    operatingParametersInfo(decoderModelInfo) {\n        const n = decoderModelInfo.buffer_delay_length_minus_1 + 1;\n        const decoder_buffer_delay = this.f(n);\n        const encoder_buffer_delay = this.f(n);\n        const low_delay_mode_flag = !!this.f1();\n        return {\n            decoder_buffer_delay,\n            encoder_buffer_delay,\n            low_delay_mode_flag,\n        };\n    }\n    chooseOperatingPoint() {\n        return 0;\n    }\n    colorConfig(seq_profile) {\n        const high_bitdepth = !!this.f1();\n        let twelve_bit = false;\n        let BitDepth = 8;\n        if (seq_profile === 2 && high_bitdepth) {\n            twelve_bit = !!this.f1();\n            BitDepth = twelve_bit ? 12 : 10;\n        }\n        else if (seq_profile <= 2) {\n            BitDepth = high_bitdepth ? 10 : 8;\n        }\n        let mono_chrome = false;\n        if (seq_profile === 1) {\n            mono_chrome = !!this.f1();\n        }\n        // const NumPlanes = mono_chrome ? 1 : 3;\n        const color_description_present_flag = !!this.f1();\n        let color_primaries = Av1.ColorPrimaries.Unspecified;\n        let transfer_characteristics = Av1.TransferCharacteristics.Unspecified;\n        let matrix_coefficients = Av1.MatrixCoefficients.Unspecified;\n        if (color_description_present_flag) {\n            color_primaries = this.f(8);\n            transfer_characteristics = this.f(8);\n            matrix_coefficients = this.f(8);\n        }\n        let color_range = false;\n        let subsampling_x;\n        let subsampling_y;\n        let chroma_sample_position = 0;\n        let separate_uv_delta_q = false;\n        if (mono_chrome) {\n            color_range = !!this.f1();\n            subsampling_x = true;\n            subsampling_y = true;\n        }\n        else {\n            if (color_primaries === Av1.ColorPrimaries.Bt709 &&\n                transfer_characteristics === Av1.TransferCharacteristics.Srgb &&\n                matrix_coefficients === Av1.MatrixCoefficients.Identity) {\n                color_range = true;\n                subsampling_x = false;\n                subsampling_y = false;\n            }\n            else {\n                color_range = !!this.f1();\n                switch (seq_profile) {\n                    case 0:\n                        subsampling_x = true;\n                        subsampling_y = true;\n                        break;\n                    case 1:\n                        subsampling_x = false;\n                        subsampling_y = false;\n                        break;\n                    default:\n                        if (BitDepth == 12) {\n                            subsampling_x = !!this.f1();\n                            if (subsampling_x) {\n                                subsampling_y = !!this.f1();\n                            }\n                            else {\n                                subsampling_y = false;\n                            }\n                        }\n                        else {\n                            subsampling_x = true;\n                            subsampling_y = false;\n                        }\n                        break;\n                }\n                if (subsampling_x && subsampling_y) {\n                    chroma_sample_position = this.f(2);\n                }\n            }\n            separate_uv_delta_q = !!this.f1();\n        }\n        return {\n            high_bitdepth,\n            twelve_bit,\n            BitDepth,\n            mono_chrome,\n            color_description_present_flag,\n            color_primaries,\n            transfer_characteristics,\n            matrix_coefficients,\n            color_range,\n            subsampling_x,\n            subsampling_y,\n            chroma_sample_position,\n            separate_uv_delta_q,\n        };\n    }\n}\n//# sourceMappingURL=av1.js.map","/**\n * Split NAL units from an H.264/H.265 Annex B stream.\n *\n * The input is not modified.\n * The returned NAL units are views of the input (no memory allocation nor copy),\n * and still contains emulation prevention bytes.\n *\n * This methods returns a generator, so it can be stopped immediately\n * after the interested NAL unit is found.\n */\nexport function* annexBSplitNalu(buffer) {\n    // -1 means we haven't found the first start code\n    let start = -1;\n    // How many `0x00`s in a row we have counted\n    let zeroCount = 0;\n    let inEmulation = false;\n    for (let i = 0; i < buffer.length; i += 1) {\n        const byte = buffer[i];\n        if (inEmulation) {\n            if (byte > 0x03) {\n                // `0x00000304` or larger are invalid\n                throw new Error(\"Invalid data\");\n            }\n            inEmulation = false;\n            continue;\n        }\n        if (byte === 0x00) {\n            zeroCount += 1;\n            continue;\n        }\n        const prevZeroCount = zeroCount;\n        zeroCount = 0;\n        if (start === -1) {\n            // 0x000001 is the start code\n            // But it can be preceded by any number of zeros\n            // So 2 is the minimal\n            if (prevZeroCount >= 2 && byte === 0x01) {\n                // Found start of first NAL unit\n                start = i + 1;\n                continue;\n            }\n            // Not begin with start code\n            throw new Error(\"Invalid data\");\n        }\n        if (prevZeroCount < 2) {\n            // zero or one `0x00`s are acceptable\n            continue;\n        }\n        if (byte === 0x01) {\n            // Found another NAL unit\n            yield buffer.subarray(start, i - prevZeroCount);\n            start = i + 1;\n            continue;\n        }\n        if (prevZeroCount > 2) {\n            // Too much `0x00`s\n            throw new Error(\"Invalid data\");\n        }\n        switch (byte) {\n            case 0x02:\n                // Didn't find why, but 7.4.1 NAL unit semantics forbids `0x000002` appearing in NAL units\n                throw new Error(\"Invalid data\");\n            case 0x03:\n                // `0x000003` is the \"emulation_prevention_three_byte\"\n                // `0x00000300`, `0x00000301`, `0x00000302` and `0x00000303` represent\n                // `0x000000`, `0x000001`, `0x000002` and `0x000003` respectively\n                inEmulation = true;\n                break;\n            default:\n                // `0x000004` or larger are as-is\n                break;\n        }\n    }\n    if (inEmulation) {\n        throw new Error(\"Invalid data\");\n    }\n    yield buffer.subarray(start, buffer.length);\n}\nexport class NaluSodbBitReader {\n    #nalu;\n    // logical length is `#byteLength * 8 + (7 - #stopBitIndex)`\n    #byteLength;\n    #stopBitIndex;\n    #zeroCount = 0;\n    // logical position is `#bytePosition * 8 + (7 - #bitPosition)`\n    #bytePosition = 0;\n    #bitPosition = 7;\n    #byte = 0;\n    get byteLength() {\n        return this.#byteLength;\n    }\n    get stopBitIndex() {\n        return this.#stopBitIndex;\n    }\n    get bytePosition() {\n        return this.#bytePosition;\n    }\n    get bitPosition() {\n        return this.#bitPosition;\n    }\n    get ended() {\n        return (this.#bytePosition >= this.#byteLength &&\n            this.#bitPosition <= this.#stopBitIndex);\n    }\n    constructor(nalu) {\n        this.#nalu = nalu;\n        // Search for the last bit being `1`, also known as the stop bit\n        for (let i = nalu.length - 1; i >= 0; i -= 1) {\n            if (this.#nalu[i] === 0) {\n                continue;\n            }\n            const byte = nalu[i];\n            for (let j = 0; j < 8; j += 1) {\n                if (((byte >> j) & 1) === 1) {\n                    this.#byteLength = i;\n                    this.#stopBitIndex = j;\n                    this.#loadByte();\n                    return;\n                }\n            }\n        }\n        throw new Error(\"Stop bit not found\");\n    }\n    #loadByte() {\n        this.#byte = this.#nalu[this.#bytePosition];\n        // If the current sequence is `0x000003`, skip to the next byte.\n        // `annexBSplitNalu` had validated the input, so skip the check here\n        if (this.#zeroCount === 2 && this.#byte === 3) {\n            this.#zeroCount = 0;\n            this.#bytePosition += 1;\n            // Call `#loadByte` again, because if the next byte is `0x00`,\n            // it need to be counted in `#zeroCount` as well.\n            this.#loadByte();\n            return;\n        }\n        // `0x00000301` becomes `0x000001`, so only the `0x03` byte needs to be skipped\n        // All `0x00` bytes are returned as-is\n        if (this.#byte === 0) {\n            this.#zeroCount += 1;\n        }\n        else {\n            this.#zeroCount = 0;\n        }\n    }\n    next() {\n        if (this.ended) {\n            throw new Error(\"Bit index out of bounds\");\n        }\n        const value = (this.#byte >> this.#bitPosition) & 1;\n        this.#bitPosition -= 1;\n        if (this.#bitPosition < 0) {\n            this.#bytePosition += 1;\n            this.#bitPosition = 7;\n            this.#loadByte();\n        }\n        return value;\n    }\n    read(length) {\n        if (length > 32) {\n            throw new Error(\"Read length too large\");\n        }\n        let result = 0;\n        for (let i = 0; i < length; i += 1) {\n            result = (result << 1) | this.next();\n        }\n        return result;\n    }\n    /**\n     * Throws an error if the current position is invalid for `skip`.\n     *\n     * Usually it will throw if `ended` is `true`,\n     * except when the bit position is at the stop bit,\n     * in which case `ended` will be `true`, but it won't throw.\n     * `skip` can skip all remaining bits, and stop at the end position.\n     * The next `next` call will throw since there is no more bits to read.\n     */\n    #checkSkipPosition() {\n        if (this.#bytePosition >= this.#byteLength &&\n            this.#bitPosition < this.#stopBitIndex) {\n            throw new Error(\"Bit index out of bounds\");\n        }\n    }\n    skip(length) {\n        if (length <= this.#bitPosition + 1) {\n            this.#bitPosition -= length;\n            this.#checkSkipPosition();\n            return;\n        }\n        // Because of emulation prevention bytes,\n        // we don't know how many bits are left in the NAL,\n        // nor how many bits should be skipped.\n        // So we need to check each byte.\n        length -= this.#bitPosition + 1;\n        this.#bytePosition += 1;\n        this.#bitPosition = 7;\n        this.#loadByte();\n        this.#checkSkipPosition();\n        for (; length >= 8; length -= 8) {\n            this.#bytePosition += 1;\n            this.#loadByte();\n            this.#checkSkipPosition();\n        }\n        this.#bitPosition = 7 - length;\n        this.#checkSkipPosition();\n    }\n    decodeExponentialGolombNumber() {\n        let length = 0;\n        while (this.next() === 0) {\n            length += 1;\n        }\n        if (length === 0) {\n            return 0;\n        }\n        return ((1 << length) | this.read(length)) - 1;\n    }\n    #save() {\n        return {\n            zeroCount: this.#zeroCount,\n            bytePosition: this.#bytePosition,\n            bitPosition: this.#bitPosition,\n            byte: this.#byte,\n        };\n    }\n    #restore(state) {\n        this.#zeroCount = state.zeroCount;\n        this.#bytePosition = state.bytePosition;\n        this.#bitPosition = state.bitPosition;\n        this.#byte = state.byte;\n    }\n    peek(length) {\n        const state = this.#save();\n        const result = this.read(length);\n        this.#restore(state);\n        return result;\n    }\n    readBytes(length) {\n        const result = new Uint8Array(length);\n        for (let i = 0; i < length; i += 1) {\n            result[i] = this.read(8);\n        }\n        return result;\n    }\n    peekBytes(length) {\n        const state = this.#save();\n        const result = this.readBytes(length);\n        this.#restore(state);\n        return result;\n    }\n}\n//# sourceMappingURL=nalu.js.map","// cspell: ignore golomb\n// cspell: ignore qpprime\n// cspell: ignore colour\nimport { NaluSodbBitReader, annexBSplitNalu } from \"./nalu.js\";\n// From https://developer.android.com/reference/android/media/MediaCodecInfo.CodecProfileLevel\nexport const AndroidAvcProfile = {\n    Baseline: 1 << 0,\n    Main: 1 << 1,\n    Extended: 1 << 2,\n    High: 1 << 3,\n    High10: 1 << 4,\n    High422: 1 << 5,\n    High444: 1 << 6,\n    ConstrainedBaseline: 1 << 16,\n    ConstrainedHigh: 1 << 19,\n};\nexport const AndroidAvcLevel = {\n    Level1: 1 << 0,\n    Level1b: 1 << 1,\n    Level11: 1 << 2,\n    Level12: 1 << 3,\n    Level13: 1 << 4,\n    Level2: 1 << 5,\n    Level21: 1 << 6,\n    Level22: 1 << 7,\n    Level3: 1 << 8,\n    Level31: 1 << 9,\n    Level32: 1 << 10,\n    Level4: 1 << 11,\n    Level41: 1 << 12,\n    Level42: 1 << 13,\n    Level5: 1 << 14,\n    Level51: 1 << 15,\n    Level52: 1 << 16,\n    Level6: 1 << 17,\n    Level61: 1 << 18,\n    Level62: 1 << 19,\n};\n// H.264 has two standards: ITU-T H.264 and ISO/IEC 14496-10\n// they have the same content, and refer themselves as \"H.264\".\n// The name \"AVC\" (Advanced Video Coding) is only used in ISO spec name,\n// and other ISO specs referring to H.264.\n// Because this module parses H.264 Annex B format,\n// it's named \"h264\" instead of \"avc\".\n// 7.3.2.1.1 Sequence parameter set data syntax\n// Variable names in this method uses the snake_case convention as in the spec for easier referencing.\nexport function h264ParseSequenceParameterSet(nalu) {\n    const reader = new NaluSodbBitReader(nalu);\n    if (reader.next() !== 0) {\n        throw new Error(\"Invalid data\");\n    }\n    const nal_ref_idc = reader.read(2);\n    const nal_unit_type = reader.read(5);\n    if (nal_unit_type !== 7) {\n        throw new Error(\"Invalid data\");\n    }\n    if (nal_ref_idc === 0) {\n        throw new Error(\"Invalid data\");\n    }\n    const profile_idc = reader.read(8);\n    const constraint_set = reader.peek(8);\n    const constraint_set0_flag = !!reader.next();\n    const constraint_set1_flag = !!reader.next();\n    const constraint_set2_flag = !!reader.next();\n    const constraint_set3_flag = !!reader.next();\n    const constraint_set4_flag = !!reader.next();\n    const constraint_set5_flag = !!reader.next();\n    // reserved_zero_2bits\n    if (reader.read(2) !== 0) {\n        throw new Error(\"Invalid data\");\n    }\n    const level_idc = reader.read(8);\n    const seq_parameter_set_id = reader.decodeExponentialGolombNumber();\n    if (profile_idc === 100 ||\n        profile_idc === 110 ||\n        profile_idc === 122 ||\n        profile_idc === 244 ||\n        profile_idc === 44 ||\n        profile_idc === 83 ||\n        profile_idc === 86 ||\n        profile_idc === 118 ||\n        profile_idc === 128 ||\n        profile_idc === 138 ||\n        profile_idc === 139 ||\n        profile_idc === 134) {\n        const chroma_format_idc = reader.decodeExponentialGolombNumber();\n        if (chroma_format_idc === 3) {\n            // separate_colour_plane_flag\n            reader.next();\n        }\n        // bit_depth_luma_minus8\n        reader.decodeExponentialGolombNumber();\n        // bit_depth_chroma_minus8\n        reader.decodeExponentialGolombNumber();\n        // qpprime_y_zero_transform_bypass_flag\n        reader.next();\n        const seq_scaling_matrix_present_flag = !!reader.next();\n        if (seq_scaling_matrix_present_flag) {\n            const seq_scaling_list_present_flag = [];\n            for (let i = 0; i < (chroma_format_idc !== 3 ? 8 : 12); i += 1) {\n                seq_scaling_list_present_flag[i] = !!reader.next();\n                if (seq_scaling_list_present_flag[i])\n                    if (i < 6) {\n                        // TODO\n                        // scaling_list( ScalingList4x4[ i ], 16,\n                        //               UseDefaultScalingMatrix4x4Flag[ i ])\n                    }\n                    else {\n                        // TODO\n                        // scaling_list( ScalingList8x8[ i − 6 ], 64,\n                        //               UseDefaultScalingMatrix8x8Flag[ i − 6 ] )\n                    }\n            }\n        }\n    }\n    // log2_max_frame_num_minus4\n    reader.decodeExponentialGolombNumber();\n    const pic_order_cnt_type = reader.decodeExponentialGolombNumber();\n    if (pic_order_cnt_type === 0) {\n        // log2_max_pic_order_cnt_lsb_minus4\n        reader.decodeExponentialGolombNumber();\n    }\n    else if (pic_order_cnt_type === 1) {\n        // delta_pic_order_always_zero_flag\n        reader.next();\n        // offset_for_non_ref_pic\n        reader.decodeExponentialGolombNumber();\n        // offset_for_top_to_bottom_field\n        reader.decodeExponentialGolombNumber();\n        const num_ref_frames_in_pic_order_cnt_cycle = reader.decodeExponentialGolombNumber();\n        const offset_for_ref_frame = [];\n        for (let i = 0; i < num_ref_frames_in_pic_order_cnt_cycle; i += 1) {\n            offset_for_ref_frame[i] = reader.decodeExponentialGolombNumber();\n        }\n    }\n    // max_num_ref_frames\n    reader.decodeExponentialGolombNumber();\n    // gaps_in_frame_num_value_allowed_flag\n    reader.next();\n    const pic_width_in_mbs_minus1 = reader.decodeExponentialGolombNumber();\n    const pic_height_in_map_units_minus1 = reader.decodeExponentialGolombNumber();\n    const frame_mbs_only_flag = reader.next();\n    if (!frame_mbs_only_flag) {\n        // mb_adaptive_frame_field_flag\n        reader.next();\n    }\n    // direct_8x8_inference_flag\n    reader.next();\n    const frame_cropping_flag = !!reader.next();\n    let frame_crop_left_offset;\n    let frame_crop_right_offset;\n    let frame_crop_top_offset;\n    let frame_crop_bottom_offset;\n    if (frame_cropping_flag) {\n        frame_crop_left_offset = reader.decodeExponentialGolombNumber();\n        frame_crop_right_offset = reader.decodeExponentialGolombNumber();\n        frame_crop_top_offset = reader.decodeExponentialGolombNumber();\n        frame_crop_bottom_offset = reader.decodeExponentialGolombNumber();\n    }\n    else {\n        frame_crop_left_offset = 0;\n        frame_crop_right_offset = 0;\n        frame_crop_top_offset = 0;\n        frame_crop_bottom_offset = 0;\n    }\n    const vui_parameters_present_flag = !!reader.next();\n    if (vui_parameters_present_flag) {\n        // TODO\n        // vui_parameters( )\n    }\n    return {\n        profile_idc,\n        constraint_set,\n        constraint_set0_flag,\n        constraint_set1_flag,\n        constraint_set2_flag,\n        constraint_set3_flag,\n        constraint_set4_flag,\n        constraint_set5_flag,\n        level_idc,\n        seq_parameter_set_id,\n        pic_width_in_mbs_minus1,\n        pic_height_in_map_units_minus1,\n        frame_mbs_only_flag,\n        frame_cropping_flag,\n        frame_crop_left_offset,\n        frame_crop_right_offset,\n        frame_crop_top_offset,\n        frame_crop_bottom_offset,\n    };\n}\n/**\n * Find Sequence Parameter Set (SPS) and Picture Parameter Set (PPS)\n * from H.264 Annex B formatted data.\n */\nexport function h264SearchConfiguration(buffer) {\n    let sequenceParameterSet;\n    let pictureParameterSet;\n    for (const nalu of annexBSplitNalu(buffer)) {\n        const naluType = nalu[0] & 0x1f;\n        switch (naluType) {\n            case 7: // Sequence parameter set\n                sequenceParameterSet = nalu;\n                if (pictureParameterSet) {\n                    return {\n                        sequenceParameterSet,\n                        pictureParameterSet,\n                    };\n                }\n                break;\n            case 8: // Picture parameter set\n                pictureParameterSet = nalu;\n                if (sequenceParameterSet) {\n                    return {\n                        sequenceParameterSet,\n                        pictureParameterSet,\n                    };\n                }\n                break;\n            default:\n                // ignore\n                break;\n        }\n    }\n    throw new Error(\"Invalid data\");\n}\nexport function h264ParseConfiguration(data) {\n    const { sequenceParameterSet, pictureParameterSet } = h264SearchConfiguration(data);\n    const { profile_idc: profileIndex, constraint_set: constraintSet, level_idc: levelIndex, pic_width_in_mbs_minus1, pic_height_in_map_units_minus1, frame_mbs_only_flag, frame_crop_left_offset, frame_crop_right_offset, frame_crop_top_offset, frame_crop_bottom_offset, } = h264ParseSequenceParameterSet(sequenceParameterSet);\n    const encodedWidth = (pic_width_in_mbs_minus1 + 1) * 16;\n    const encodedHeight = (pic_height_in_map_units_minus1 + 1) * (2 - frame_mbs_only_flag) * 16;\n    const cropLeft = frame_crop_left_offset * 2;\n    const cropRight = frame_crop_right_offset * 2;\n    const cropTop = frame_crop_top_offset * 2;\n    const cropBottom = frame_crop_bottom_offset * 2;\n    const croppedWidth = encodedWidth - cropLeft - cropRight;\n    const croppedHeight = encodedHeight - cropTop - cropBottom;\n    return {\n        pictureParameterSet,\n        sequenceParameterSet,\n        profileIndex,\n        constraintSet,\n        levelIndex,\n        encodedWidth,\n        encodedHeight,\n        cropLeft,\n        cropRight,\n        cropTop,\n        cropBottom,\n        croppedWidth,\n        croppedHeight,\n    };\n}\n//# sourceMappingURL=h264.js.map","// cspell: ignore golomb\n// cspell: ignore qpprime\n// cspell: ignore colour\n// cspell: ignore inbld\n// cspell: ignore Coef\n// cspell: ignore coeffs\n// cspell: ignore Pocs\n// cspell: ignore overscan\n// cspell: ignore disp\n// cspell: ignore bitstream\n// cspell: ignore scal\n// cspell: ignore ivmc\n// cspell: ignore dbbp\n// cspell: ignore texmc\n// cspell: ignore rbsp\n// cspell: ignore cprms\n// cspell: ignore nalu\n// cspell: ignore sodb\n// cspell: ignore luma\nimport { NaluSodbBitReader, annexBSplitNalu } from \"./nalu.js\";\nexport const AndroidHevcProfile = {\n    Main: 1 << 0,\n    Main10: 1 << 1,\n    MainStill: 1 << 2,\n    Main10Hdr10: 1 << 12,\n    Main10Hdr10Plus: 1 << 13,\n};\nexport const AndroidHevcLevel = {\n    MainTierLevel1: 1 << 0,\n    HighTierLevel1: 1 << 1,\n    MainTierLevel2: 1 << 2,\n    HighTierLevel2: 1 << 3,\n    MainTierLevel21: 1 << 4,\n    HighTierLevel21: 1 << 5,\n    MainTierLevel3: 1 << 6,\n    HighTierLevel3: 1 << 7,\n    MainTierLevel31: 1 << 8,\n    HighTierLevel31: 1 << 9,\n    MainTierLevel4: 1 << 10,\n    HighTierLevel4: 1 << 11,\n    MainTierLevel41: 1 << 12,\n    HighTierLevel41: 1 << 13,\n    MainTierLevel5: 1 << 14,\n    HighTierLevel5: 1 << 15,\n    MainTierLevel51: 1 << 16,\n    HighTierLevel51: 1 << 17,\n    MainTierLevel52: 1 << 18,\n    HighTierLevel52: 1 << 19,\n    MainTierLevel6: 1 << 20,\n    HighTierLevel6: 1 << 21,\n    MainTierLevel61: 1 << 22,\n    HighTierLevel61: 1 << 23,\n    MainTierLevel62: 1 << 24,\n    HighTierLevel62: 1 << 25,\n};\n/**\n * 6.2 Source, decoded and output picture formats\n */\nexport function getSubWidthC(chroma_format_idc) {\n    switch (chroma_format_idc) {\n        case 0:\n        case 3:\n            return 1;\n        case 1:\n        case 2:\n            return 2;\n        default:\n            throw new Error(\"Invalid chroma_format_idc\");\n    }\n}\n/**\n * 6.2 Source, decoded and output picture formats\n */\nexport function getSubHeightC(chroma_format_idc) {\n    switch (chroma_format_idc) {\n        case 0:\n        case 2:\n        case 3:\n            return 1;\n        case 1:\n            return 2;\n        default:\n            throw new Error(\"Invalid chroma_format_idc\");\n    }\n}\n/**\n * 7.3.1.1 General NAL unit syntax\n */\nexport function h265ParseNaluHeader(nalu) {\n    const reader = new NaluSodbBitReader(nalu);\n    if (reader.next() !== 0) {\n        throw new Error(\"Invalid NALU header\");\n    }\n    const nal_unit_type = reader.read(6);\n    const nuh_layer_id = reader.read(6);\n    const nuh_temporal_id_plus1 = reader.read(3);\n    return {\n        nal_unit_type,\n        nuh_layer_id,\n        nuh_temporal_id_plus1,\n    };\n}\n/**\n * 7.3.2.1 Video parameter set RBSP syntax\n */\nexport function h265ParseVideoParameterSet(nalu) {\n    const reader = new NaluSodbBitReader(nalu);\n    const vps_video_parameter_set_id = reader.read(4);\n    const vps_base_layer_internal_flag = !!reader.next();\n    const vps_base_layer_available_flag = !!reader.next();\n    const vps_max_layers_minus1 = reader.read(6);\n    const vps_max_sub_layers_minus1 = reader.read(3);\n    const vps_temporal_id_nesting_flag = !!reader.next();\n    reader.skip(16);\n    const profileTierLevel = h265ParseProfileTierLevel(reader, true, vps_max_sub_layers_minus1);\n    const vps_sub_layer_ordering_info_present_flag = !!reader.next();\n    const vps_max_dec_pic_buffering_minus1 = [];\n    const vps_max_num_reorder_pics = [];\n    const vps_max_latency_increase_plus1 = [];\n    for (let i = vps_sub_layer_ordering_info_present_flag\n        ? 0\n        : vps_max_sub_layers_minus1; i <= vps_max_sub_layers_minus1; i += 1) {\n        vps_max_dec_pic_buffering_minus1[i] =\n            reader.decodeExponentialGolombNumber();\n        vps_max_num_reorder_pics[i] = reader.decodeExponentialGolombNumber();\n        vps_max_latency_increase_plus1[i] =\n            reader.decodeExponentialGolombNumber();\n    }\n    const vps_max_layer_id = reader.read(6);\n    const vps_num_layer_sets_minus1 = reader.decodeExponentialGolombNumber();\n    const layer_id_included_flag = [];\n    for (let i = 1; i <= vps_num_layer_sets_minus1; i += 1) {\n        layer_id_included_flag[i] = [];\n        for (let j = 0; j <= vps_max_layer_id; j += 1) {\n            layer_id_included_flag[i][j] = !!reader.next();\n        }\n    }\n    const vps_timing_info_present_flag = !!reader.next();\n    let vps_num_units_in_tick;\n    let vps_time_scale;\n    let vps_poc_proportional_to_timing_flag;\n    let vps_num_ticks_poc_diff_one_minus1;\n    let vps_num_hrd_parameters;\n    let hrd_layer_set_idx;\n    let cprms_present_flag;\n    let hrdParameters;\n    if (vps_timing_info_present_flag) {\n        vps_num_units_in_tick = reader.read(32);\n        vps_time_scale = reader.read(32);\n        vps_poc_proportional_to_timing_flag = !!reader.next();\n        if (vps_poc_proportional_to_timing_flag) {\n            vps_num_ticks_poc_diff_one_minus1 =\n                reader.decodeExponentialGolombNumber();\n        }\n        vps_num_hrd_parameters = reader.decodeExponentialGolombNumber();\n        hrd_layer_set_idx = [];\n        cprms_present_flag = [true];\n        hrdParameters = [];\n        for (let i = 0; i < vps_num_hrd_parameters; i += 1) {\n            hrd_layer_set_idx[i] = reader.decodeExponentialGolombNumber();\n            if (i > 0) {\n                cprms_present_flag[i] = !!reader.next();\n            }\n            hrdParameters[i] = h265ParseHrdParameters(reader, cprms_present_flag[i], vps_max_sub_layers_minus1);\n        }\n    }\n    const vps_extension_flag = !!reader.next();\n    return {\n        vps_video_parameter_set_id,\n        vps_base_layer_internal_flag,\n        vps_base_layer_available_flag,\n        vps_max_layers_minus1,\n        vps_max_sub_layers_minus1,\n        vps_temporal_id_nesting_flag,\n        profileTierLevel,\n        vps_sub_layer_ordering_info_present_flag,\n        vps_max_dec_pic_buffering_minus1,\n        vps_max_num_reorder_pics,\n        vps_max_latency_increase_plus1,\n        vps_max_layer_id,\n        vps_num_layer_sets_minus1,\n        layer_id_included_flag,\n        vps_timing_info_present_flag,\n        vps_num_units_in_tick,\n        vps_time_scale,\n        vps_poc_proportional_to_timing_flag,\n        vps_num_ticks_poc_diff_one_minus1,\n        vps_num_hrd_parameters,\n        hrd_layer_set_idx,\n        cprms_present_flag,\n        hrdParameters,\n        vps_extension_flag,\n    };\n}\n/**\n * 7.3.2.2.1 General sequence parameter set RBSP syntax\n */\nexport function h265ParseSequenceParameterSet(nalu) {\n    const reader = new NaluSodbBitReader(nalu);\n    const sps_video_parameter_set_id = reader.read(4);\n    const sps_max_sub_layers_minus1 = reader.read(3);\n    const sps_temporal_id_nesting_flag = !!reader.next();\n    const profileTierLevel = h265ParseProfileTierLevel(reader, true, sps_max_sub_layers_minus1);\n    const sps_seq_parameter_set_id = reader.decodeExponentialGolombNumber();\n    const chroma_format_idc = reader.decodeExponentialGolombNumber();\n    let separate_colour_plane_flag;\n    if (chroma_format_idc === 3) {\n        separate_colour_plane_flag = !!reader.next();\n    }\n    const pic_width_in_luma_samples = reader.decodeExponentialGolombNumber();\n    const pic_height_in_luma_samples = reader.decodeExponentialGolombNumber();\n    const conformance_window_flag = !!reader.next();\n    let conf_win_left_offset;\n    let conf_win_right_offset;\n    let conf_win_top_offset;\n    let conf_win_bottom_offset;\n    if (conformance_window_flag) {\n        conf_win_left_offset = reader.decodeExponentialGolombNumber();\n        conf_win_right_offset = reader.decodeExponentialGolombNumber();\n        conf_win_top_offset = reader.decodeExponentialGolombNumber();\n        conf_win_bottom_offset = reader.decodeExponentialGolombNumber();\n    }\n    const bit_depth_luma_minus8 = reader.decodeExponentialGolombNumber();\n    const bit_depth_chroma_minus8 = reader.decodeExponentialGolombNumber();\n    const log2_max_pic_order_cnt_lsb_minus4 = reader.decodeExponentialGolombNumber();\n    const sps_max_dec_pic_buffering_minus1 = [];\n    const sps_max_num_reorder_pics = [];\n    const sps_max_latency_increase_plus1 = [];\n    const sps_sub_layer_ordering_info_present_flag = !!reader.next();\n    for (let i = sps_sub_layer_ordering_info_present_flag\n        ? 0\n        : sps_max_sub_layers_minus1; i <= sps_max_sub_layers_minus1; i += 1) {\n        sps_max_dec_pic_buffering_minus1[i] =\n            reader.decodeExponentialGolombNumber();\n        sps_max_num_reorder_pics[i] = reader.decodeExponentialGolombNumber();\n        sps_max_latency_increase_plus1[i] =\n            reader.decodeExponentialGolombNumber();\n    }\n    const log2_min_luma_coding_block_size_minus3 = reader.decodeExponentialGolombNumber();\n    const log2_diff_max_min_luma_coding_block_size = reader.decodeExponentialGolombNumber();\n    const log2_min_luma_transform_block_size_minus2 = reader.decodeExponentialGolombNumber();\n    const log2_diff_max_min_luma_transform_block_size = reader.decodeExponentialGolombNumber();\n    const max_transform_hierarchy_depth_inter = reader.decodeExponentialGolombNumber();\n    const max_transform_hierarchy_depth_intra = reader.decodeExponentialGolombNumber();\n    const scaling_list_enabled_flag = !!reader.next();\n    let sps_scaling_list_data_present_flag;\n    let scalingListData;\n    if (scaling_list_enabled_flag) {\n        sps_scaling_list_data_present_flag = !!reader.next();\n        if (sps_scaling_list_data_present_flag) {\n            scalingListData = h265ParseScalingListData(reader);\n        }\n    }\n    const amp_enabled_flag = !!reader.next();\n    const sample_adaptive_offset_enabled_flag = !!reader.next();\n    const pcm_enabled_flag = !!reader.next();\n    let pcm_sample_bit_depth_luma_minus1;\n    let pcm_sample_bit_depth_chroma_minus1;\n    let log2_min_pcm_luma_coding_block_size_minus3;\n    let log2_diff_max_min_pcm_luma_coding_block_size;\n    let pcm_loop_filter_disabled_flag;\n    if (pcm_enabled_flag) {\n        pcm_sample_bit_depth_luma_minus1 = reader.read(4);\n        pcm_sample_bit_depth_chroma_minus1 = reader.read(4);\n        log2_min_pcm_luma_coding_block_size_minus3 =\n            reader.decodeExponentialGolombNumber();\n        log2_diff_max_min_pcm_luma_coding_block_size =\n            reader.decodeExponentialGolombNumber();\n        pcm_loop_filter_disabled_flag = !!reader.next();\n    }\n    const num_short_term_ref_pic_sets = reader.decodeExponentialGolombNumber();\n    const shortTermRefPicSets = [];\n    for (let i = 0; i < num_short_term_ref_pic_sets; i += 1) {\n        shortTermRefPicSets[i] = h265ParseShortTermReferencePictureSet(reader, i, num_short_term_ref_pic_sets, shortTermRefPicSets);\n    }\n    const long_term_ref_pics_present_flag = !!reader.next();\n    let num_long_term_ref_pics_sps;\n    let lt_ref_pic_poc_lsb_sps;\n    let used_by_curr_pic_lt_sps_flag;\n    if (long_term_ref_pics_present_flag) {\n        num_long_term_ref_pics_sps = reader.decodeExponentialGolombNumber();\n        lt_ref_pic_poc_lsb_sps = [];\n        used_by_curr_pic_lt_sps_flag = [];\n        for (let i = 0; i < num_long_term_ref_pics_sps; i += 1) {\n            lt_ref_pic_poc_lsb_sps[i] = reader.read(log2_max_pic_order_cnt_lsb_minus4 + 4);\n            used_by_curr_pic_lt_sps_flag[i] = !!reader.next();\n        }\n    }\n    const sps_temporal_mvp_enabled_flag = !!reader.next();\n    const strong_intra_smoothing_enabled_flag = !!reader.next();\n    const vui_parameters_present_flag = !!reader.next();\n    let vuiParameters;\n    if (vui_parameters_present_flag) {\n        vuiParameters = h265ParseVuiParameters(reader, sps_max_sub_layers_minus1);\n    }\n    const sps_extension_present_flag = !!reader.next();\n    let sps_range_extension_flag;\n    let sps_multilayer_extension_flag;\n    let sps_3d_extension_flag;\n    let sps_scc_extension_flag;\n    let sps_extension_4bits;\n    if (sps_extension_present_flag) {\n        sps_range_extension_flag = !!reader.next();\n        sps_multilayer_extension_flag = !!reader.next();\n        sps_3d_extension_flag = !!reader.next();\n        sps_scc_extension_flag = !!reader.next();\n        sps_extension_4bits = reader.read(4);\n    }\n    if (sps_range_extension_flag) {\n        throw new Error(\"Not implemented\");\n    }\n    let spsMultilayerExtension;\n    if (sps_multilayer_extension_flag) {\n        spsMultilayerExtension = h265ParseSpsMultilayerExtension(reader);\n    }\n    let sps3dExtension;\n    if (sps_3d_extension_flag) {\n        sps3dExtension = h265ParseSps3dExtension(reader);\n    }\n    if (sps_scc_extension_flag) {\n        throw new Error(\"Not implemented\");\n    }\n    let sps_extension_data_flag;\n    if (sps_extension_4bits) {\n        sps_extension_data_flag = [];\n        let i = 0;\n        while (!reader.ended) {\n            sps_extension_data_flag[i] = !!reader.next();\n            i += 1;\n        }\n    }\n    return {\n        sps_video_parameter_set_id,\n        sps_max_sub_layers_minus1,\n        sps_temporal_id_nesting_flag,\n        profileTierLevel,\n        sps_seq_parameter_set_id,\n        chroma_format_idc,\n        separate_colour_plane_flag,\n        pic_width_in_luma_samples,\n        pic_height_in_luma_samples,\n        conformance_window_flag,\n        conf_win_left_offset,\n        conf_win_right_offset,\n        conf_win_top_offset,\n        conf_win_bottom_offset,\n        bit_depth_luma_minus8,\n        bit_depth_chroma_minus8,\n        log2_max_pic_order_cnt_lsb_minus4,\n        sps_sub_layer_ordering_info_present_flag,\n        sps_max_dec_pic_buffering_minus1,\n        sps_max_num_reorder_pics,\n        sps_max_latency_increase_plus1,\n        log2_min_luma_coding_block_size_minus3,\n        log2_diff_max_min_luma_coding_block_size,\n        log2_min_luma_transform_block_size_minus2,\n        log2_diff_max_min_luma_transform_block_size,\n        max_transform_hierarchy_depth_inter,\n        max_transform_hierarchy_depth_intra,\n        scaling_list_enabled_flag,\n        sps_scaling_list_data_present_flag,\n        scalingListData,\n        amp_enabled_flag,\n        sample_adaptive_offset_enabled_flag,\n        pcm_enabled_flag,\n        pcm_sample_bit_depth_luma_minus1,\n        pcm_sample_bit_depth_chroma_minus1,\n        log2_min_pcm_luma_coding_block_size_minus3,\n        log2_diff_max_min_pcm_luma_coding_block_size,\n        pcm_loop_filter_disabled_flag,\n        num_short_term_ref_pic_sets,\n        shortTermRefPicSets,\n        long_term_ref_pics_present_flag,\n        num_long_term_ref_pics_sps,\n        lt_ref_pic_poc_lsb_sps,\n        used_by_curr_pic_lt_sps_flag,\n        sps_temporal_mvp_enabled_flag,\n        strong_intra_smoothing_enabled_flag,\n        vui_parameters_present_flag,\n        vuiParameters,\n        sps_extension_present_flag,\n        sps_range_extension_flag,\n        sps_multilayer_extension_flag,\n        sps_3d_extension_flag,\n        sps_scc_extension_flag,\n        sps_extension_4bits,\n        spsMultilayerExtension,\n        sps3dExtension,\n        sps_extension_data_flag,\n    };\n}\n/**\n * 7.3.3 Profile, tier and level syntax\n *\n * Common part between general_profile_tier_level and\n * sub_layer_profile_tier_level\n */\nfunction h265ParseProfileTier(reader) {\n    const profile_space = reader.read(2);\n    const tier_flag = !!reader.next();\n    const profile_idc = reader.read(5);\n    const profileCompatibilitySet = reader.peekBytes(4);\n    const profile_compatibility_flag = [];\n    for (let j = 0; j < 32; j += 1) {\n        profile_compatibility_flag[j] = !!reader.next();\n    }\n    const constraintSet = reader.peekBytes(6);\n    const progressive_source_flag = !!reader.next();\n    const interlaced_source_flag = !!reader.next();\n    const non_packed_constraint_flag = !!reader.next();\n    const frame_only_constraint_flag = !!reader.next();\n    let max_12bit_constraint_flag;\n    let max_10bit_constraint_flag;\n    let max_8bit_constraint_flag;\n    let max_422chroma_constraint_flag;\n    let max_420chroma_constraint_flag;\n    let max_monochrome_constraint_flag;\n    let intra_constraint_flag;\n    let one_picture_only_constraint_flag;\n    let lower_bit_rate_constraint_flag;\n    let max_14bit_constraint_flag;\n    if (profile_idc === 4 ||\n        profile_compatibility_flag[4] ||\n        profile_idc === 5 ||\n        profile_compatibility_flag[5] ||\n        profile_idc === 6 ||\n        profile_compatibility_flag[6] ||\n        profile_idc === 7 ||\n        profile_compatibility_flag[7] ||\n        profile_idc === 8 ||\n        profile_compatibility_flag[8] ||\n        profile_idc === 9 ||\n        profile_compatibility_flag[9] ||\n        profile_idc === 10 ||\n        profile_compatibility_flag[10] ||\n        profile_idc === 11 ||\n        profile_compatibility_flag[11]) {\n        max_12bit_constraint_flag = !!reader.next();\n        max_10bit_constraint_flag = !!reader.next();\n        max_8bit_constraint_flag = !!reader.next();\n        max_422chroma_constraint_flag = !!reader.next();\n        max_420chroma_constraint_flag = !!reader.next();\n        max_monochrome_constraint_flag = !!reader.next();\n        intra_constraint_flag = !!reader.next();\n        one_picture_only_constraint_flag = !!reader.next();\n        lower_bit_rate_constraint_flag = !!reader.next();\n        if (profile_idc === 5 ||\n            profile_compatibility_flag[5] ||\n            profile_idc === 9 ||\n            profile_compatibility_flag[9] ||\n            profile_idc === 10 ||\n            profile_compatibility_flag[10] ||\n            profile_idc === 11 ||\n            profile_compatibility_flag[11]) {\n            max_14bit_constraint_flag = !!reader.next();\n            reader.skip(33);\n        }\n        else {\n            reader.skip(34);\n        }\n    }\n    else if (profile_idc === 2 || profile_compatibility_flag[2]) {\n        reader.skip(7);\n        one_picture_only_constraint_flag = !!reader.next();\n        reader.skip(35);\n    }\n    else {\n        reader.skip(43);\n    }\n    let inbld_flag;\n    if (profile_idc === 1 ||\n        profile_compatibility_flag[1] ||\n        profile_idc === 2 ||\n        profile_compatibility_flag[2] ||\n        profile_idc === 3 ||\n        profile_compatibility_flag[3] ||\n        profile_idc === 4 ||\n        profile_compatibility_flag[4] ||\n        profile_idc === 5 ||\n        profile_compatibility_flag[5] ||\n        profile_idc === 9 ||\n        profile_compatibility_flag[9] ||\n        profile_idc === 11 ||\n        profile_compatibility_flag[11]) {\n        inbld_flag = !!reader.next();\n    }\n    else {\n        reader.skip(1);\n    }\n    return {\n        profile_space,\n        tier_flag,\n        profile_idc,\n        profileCompatibilitySet,\n        profile_compatibility_flag,\n        constraintSet,\n        progressive_source_flag,\n        interlaced_source_flag,\n        non_packed_constraint_flag,\n        frame_only_constraint_flag,\n        max_12bit_constraint_flag,\n        max_10bit_constraint_flag,\n        max_8bit_constraint_flag,\n        max_422chroma_constraint_flag,\n        max_420chroma_constraint_flag,\n        max_monochrome_constraint_flag,\n        intra_constraint_flag,\n        one_picture_only_constraint_flag,\n        lower_bit_rate_constraint_flag,\n        max_14bit_constraint_flag,\n        inbld_flag,\n    };\n}\nfunction h265ParseProfileTierLevel(reader, profilePresentFlag, maxNumSubLayersMinus1) {\n    let generalProfileTier;\n    if (profilePresentFlag) {\n        generalProfileTier = h265ParseProfileTier(reader);\n    }\n    const general_level_idc = reader.read(8);\n    const sub_layer_profile_present_flag = [];\n    const sub_layer_level_present_flag = [];\n    for (let i = 0; i < maxNumSubLayersMinus1; i += 1) {\n        sub_layer_profile_present_flag[i] = !!reader.next();\n        sub_layer_level_present_flag[i] = !!reader.next();\n    }\n    if (maxNumSubLayersMinus1 > 0) {\n        for (let i = maxNumSubLayersMinus1; i < 8; i += 1) {\n            reader.read(2);\n        }\n    }\n    const subLayerProfileTier = [];\n    const sub_layer_level_idc = [];\n    for (let i = 0; i < maxNumSubLayersMinus1; i += 1) {\n        if (sub_layer_profile_present_flag[i]) {\n            subLayerProfileTier[i] = h265ParseProfileTier(reader);\n        }\n        if (sub_layer_level_present_flag[i]) {\n            sub_layer_level_idc[i] = reader.read(8);\n        }\n    }\n    return {\n        generalProfileTier,\n        general_level_idc,\n        sub_layer_profile_present_flag,\n        sub_layer_level_present_flag,\n        subLayerProfileTier,\n        sub_layer_level_idc,\n    };\n}\n/**\n * 7.3.4 Scaling list data syntax\n */\nexport function h265ParseScalingListData(reader) {\n    const scaling_list = [];\n    for (let sizeId = 0; sizeId < 4; sizeId += 1) {\n        scaling_list[sizeId] = [];\n        for (let matrixId = 0; matrixId < 6; matrixId += sizeId === 3 ? 3 : 1) {\n            const scaling_list_pred_mode_flag = !!reader.next();\n            if (!scaling_list_pred_mode_flag) {\n                reader.decodeExponentialGolombNumber();\n            }\n            else {\n                let nextCoef = 8;\n                const coefNum = Math.min(64, 1 << (4 + (sizeId << 1)));\n                if (sizeId > 1) {\n                    const scaling_list_dc_coef_minus8 = reader.decodeExponentialGolombNumber();\n                    nextCoef = scaling_list_dc_coef_minus8 + 8;\n                }\n                scaling_list[sizeId][matrixId] = [];\n                for (let i = 0; i < coefNum; i += 1) {\n                    const scaling_list_delta_coef = reader.decodeExponentialGolombNumber();\n                    nextCoef = (nextCoef + scaling_list_delta_coef + 256) % 256;\n                    scaling_list[sizeId][matrixId][i] = nextCoef;\n                }\n            }\n        }\n    }\n    return scaling_list;\n}\n/**\n * 7.3.7 Short-term reference picture set syntax\n */\nexport function h265ParseShortTermReferencePictureSet(reader, stRpsIdx, num_short_term_ref_pic_sets, sets) {\n    let inter_ref_pic_set_prediction_flag = false;\n    if (stRpsIdx !== 0) {\n        inter_ref_pic_set_prediction_flag = !!reader.next();\n    }\n    let delta_idx_minus1 = 0;\n    let delta_rps_sign = false;\n    let abs_delta_rps_minus1 = 0;\n    const used_by_curr_pic_flag = [];\n    const use_delta_flag = [];\n    let num_negative_pics = 0;\n    let num_positive_pics = 0;\n    const delta_poc_s0_minus1 = [];\n    const used_by_curr_pic_s0_flag = [];\n    const delta_poc_s1_minus1 = [];\n    const used_by_curr_pic_s1_flag = [];\n    if (inter_ref_pic_set_prediction_flag) {\n        if (stRpsIdx === num_short_term_ref_pic_sets) {\n            delta_idx_minus1 = reader.decodeExponentialGolombNumber();\n        }\n        delta_rps_sign = !!reader.next();\n        abs_delta_rps_minus1 = reader.decodeExponentialGolombNumber();\n        const RefRpsIdx = stRpsIdx - (delta_idx_minus1 + 1);\n        const RefRps = sets[RefRpsIdx];\n        const NumDeltaPocs_RefRpsIdx = RefRps.num_negative_pics + RefRps.num_positive_pics;\n        for (let j = 0; j <= NumDeltaPocs_RefRpsIdx; j += 1) {\n            used_by_curr_pic_flag[j] = !!reader.next();\n            if (!used_by_curr_pic_flag[j]) {\n                use_delta_flag[j] = !!reader.next();\n            }\n            else {\n                use_delta_flag[j] = true;\n            }\n        }\n        const DeltaRps = (1 - 2 * Number(delta_rps_sign)) * (abs_delta_rps_minus1 + 1);\n        const RefPocS0 = [];\n        const RefPocS1 = [];\n        const pocS0 = [];\n        const pocS1 = [];\n        let dPoc = 0;\n        for (let i = 0; i < RefRps.num_negative_pics; i += 1) {\n            dPoc -= RefRps.delta_poc_s0_minus1[i] + 1;\n            RefPocS0[i] = dPoc;\n        }\n        dPoc = 0;\n        for (let i = 0; i < RefRps.num_positive_pics; i += 1) {\n            dPoc += RefRps.delta_poc_s1_minus1[i] + 1;\n            RefPocS1[i] = dPoc;\n        }\n        let i = 0;\n        if (RefRps.num_positive_pics > 0) {\n            for (let j = RefRps.num_positive_pics - 1; j >= 0; j -= 1) {\n                dPoc = RefPocS1[j] + DeltaRps;\n                if (dPoc < 0 && use_delta_flag[RefRps.num_negative_pics + j]) {\n                    pocS0[i] = dPoc;\n                    used_by_curr_pic_s0_flag[i] =\n                        used_by_curr_pic_flag[RefRps.num_negative_pics + j];\n                    i += 1;\n                }\n            }\n        }\n        if (DeltaRps < 0 && use_delta_flag[NumDeltaPocs_RefRpsIdx]) {\n            pocS0[i] = DeltaRps;\n            used_by_curr_pic_s0_flag[i] =\n                used_by_curr_pic_flag[NumDeltaPocs_RefRpsIdx];\n            i += 1;\n        }\n        for (let j = 0; j < RefRps.num_negative_pics; j += 1) {\n            dPoc = RefPocS0[j] + DeltaRps;\n            if (dPoc < 0 && use_delta_flag[j]) {\n                pocS0[i] = dPoc;\n                used_by_curr_pic_s0_flag[i] = used_by_curr_pic_flag[j];\n                i += 1;\n            }\n        }\n        num_negative_pics = i;\n        let prev = 0;\n        for (i = 0; i < num_negative_pics; i += 1) {\n            const current = pocS0[i];\n            delta_poc_s0_minus1[i] = -(current - prev - 1);\n            prev = current;\n        }\n        i = 0;\n        if (RefRps.num_negative_pics > 0) {\n            for (let j = RefRps.num_negative_pics - 1; j >= 0; j -= 1) {\n                dPoc = RefPocS0[j] + DeltaRps;\n                if (dPoc > 0 && use_delta_flag[j]) {\n                    pocS1[i] = dPoc;\n                    used_by_curr_pic_s1_flag[i] = used_by_curr_pic_flag[j];\n                    i += 1;\n                }\n            }\n        }\n        if (DeltaRps > 0 && use_delta_flag[NumDeltaPocs_RefRpsIdx]) {\n            pocS1[i] = DeltaRps;\n            used_by_curr_pic_s1_flag[i] =\n                used_by_curr_pic_flag[NumDeltaPocs_RefRpsIdx];\n            i += 1;\n        }\n        for (let j = 0; j < RefRps.num_positive_pics; j += 1) {\n            dPoc = RefPocS1[j] + DeltaRps;\n            if (dPoc > 0 && use_delta_flag[RefRps.num_negative_pics + j]) {\n                pocS1[i] = dPoc;\n                used_by_curr_pic_s1_flag[i] =\n                    used_by_curr_pic_flag[RefRps.num_negative_pics + j];\n                i += 1;\n            }\n        }\n        num_positive_pics = i;\n        prev = 0;\n        for (i = 0; i < num_positive_pics; i += 1) {\n            const current = pocS1[i];\n            delta_poc_s1_minus1[i] = current - prev - 1;\n            prev = current;\n        }\n    }\n    else {\n        num_negative_pics = reader.decodeExponentialGolombNumber();\n        num_positive_pics = reader.decodeExponentialGolombNumber();\n        for (let i = 0; i < num_negative_pics; i += 1) {\n            delta_poc_s0_minus1[i] = reader.decodeExponentialGolombNumber();\n            used_by_curr_pic_s0_flag[i] = !!reader.next();\n        }\n        for (let i = 0; i < num_positive_pics; i += 1) {\n            delta_poc_s1_minus1[i] = reader.decodeExponentialGolombNumber();\n            used_by_curr_pic_s1_flag[i] = !!reader.next();\n        }\n    }\n    return {\n        stRpsIdx,\n        num_short_term_ref_pic_sets,\n        inter_ref_pic_set_prediction_flag,\n        delta_idx_minus1,\n        delta_rps_sign,\n        abs_delta_rps_minus1,\n        used_by_curr_pic_flag,\n        use_delta_flag,\n        num_negative_pics,\n        num_positive_pics,\n        delta_poc_s0_minus1,\n        used_by_curr_pic_s0_flag,\n        delta_poc_s1_minus1,\n        used_by_curr_pic_s1_flag,\n    };\n}\nexport const H265AspectRatioIndicator = {\n    Unspecified: 0,\n    Square: 1,\n    _12_11: 2,\n    _10_11: 3,\n    _16_11: 4,\n    _40_33: 5,\n    _24_11: 6,\n    _20_11: 7,\n    _32_11: 8,\n    _80_33: 9,\n    _18_11: 10,\n    _15_11: 11,\n    _64_33: 12,\n    _160_99: 13,\n    _4_3: 15,\n    _3_2: 16,\n    _2_1: 17,\n    Extended: 255,\n};\n/**\n * E.2.1 VUI parameters syntax\n */\nexport function h265ParseVuiParameters(reader, sps_max_sub_layers_minus1) {\n    const aspect_ratio_info_present_flag = !!reader.next();\n    let aspect_ratio_idc;\n    let sar_width;\n    let sar_height;\n    if (aspect_ratio_info_present_flag) {\n        aspect_ratio_idc = reader.read(8);\n        if (aspect_ratio_idc === H265AspectRatioIndicator.Extended) {\n            sar_width = reader.read(16);\n            sar_height = reader.read(16);\n        }\n    }\n    const overscan_info_present_flag = !!reader.next();\n    let overscan_appropriate_flag;\n    if (overscan_info_present_flag) {\n        overscan_appropriate_flag = !!reader.next();\n    }\n    const video_signal_type_present_flag = !!reader.next();\n    let video_format;\n    let video_full_range_flag;\n    let colour_description_present_flag;\n    let colour_primaries;\n    let transfer_characteristics;\n    let matrix_coeffs;\n    if (video_signal_type_present_flag) {\n        video_format = reader.read(3);\n        video_full_range_flag = !!reader.next();\n        colour_description_present_flag = !!reader.next();\n        if (colour_description_present_flag) {\n            colour_primaries = reader.read(8);\n            transfer_characteristics = reader.read(8);\n            matrix_coeffs = reader.read(8);\n        }\n    }\n    const chroma_loc_info_present_flag = !!reader.next();\n    let chroma_sample_loc_type_top_field;\n    let chroma_sample_loc_type_bottom_field;\n    if (chroma_loc_info_present_flag) {\n        chroma_sample_loc_type_top_field =\n            reader.decodeExponentialGolombNumber();\n        chroma_sample_loc_type_bottom_field =\n            reader.decodeExponentialGolombNumber();\n    }\n    const neutral_chroma_indication_flag = !!reader.next();\n    const field_seq_flag = !!reader.next();\n    const frame_field_info_present_flag = !!reader.next();\n    const default_display_window_flag = !!reader.next();\n    let def_disp_win_left_offset;\n    let def_disp_win_right_offset;\n    let def_disp_win_top_offset;\n    let def_disp_win_bottom_offset;\n    if (default_display_window_flag) {\n        def_disp_win_left_offset = reader.decodeExponentialGolombNumber();\n        def_disp_win_right_offset = reader.decodeExponentialGolombNumber();\n        def_disp_win_top_offset = reader.decodeExponentialGolombNumber();\n        def_disp_win_bottom_offset = reader.decodeExponentialGolombNumber();\n    }\n    const vui_timing_info_present_flag = !!reader.next();\n    let vui_num_units_in_tick;\n    let vui_time_scale;\n    let vui_poc_proportional_to_timing_flag;\n    let vui_num_ticks_poc_diff_one_minus1;\n    let vui_hrd_parameters_present_flag;\n    let vui_hrd_parameters;\n    if (vui_timing_info_present_flag) {\n        vui_num_units_in_tick = reader.read(32);\n        vui_time_scale = reader.read(32);\n        vui_poc_proportional_to_timing_flag = !!reader.next();\n        if (vui_poc_proportional_to_timing_flag) {\n            vui_num_ticks_poc_diff_one_minus1 =\n                reader.decodeExponentialGolombNumber();\n        }\n        vui_hrd_parameters_present_flag = !!reader.next();\n        if (vui_hrd_parameters_present_flag) {\n            vui_hrd_parameters = h265ParseHrdParameters(reader, true, sps_max_sub_layers_minus1);\n        }\n    }\n    const bitstream_restriction_flag = !!reader.next();\n    let tiles_fixed_structure_flag;\n    let motion_vectors_over_pic_boundaries_flag;\n    let restricted_ref_pic_lists_flag;\n    let min_spatial_segmentation_idc;\n    let max_bytes_per_pic_denom;\n    let max_bits_per_min_cu_denom;\n    let log2_max_mv_length_horizontal;\n    let log2_max_mv_length_vertical;\n    if (bitstream_restriction_flag) {\n        tiles_fixed_structure_flag = !!reader.next();\n        motion_vectors_over_pic_boundaries_flag = !!reader.next();\n        restricted_ref_pic_lists_flag = !!reader.next();\n        min_spatial_segmentation_idc = reader.decodeExponentialGolombNumber();\n        max_bytes_per_pic_denom = reader.decodeExponentialGolombNumber();\n        max_bits_per_min_cu_denom = reader.decodeExponentialGolombNumber();\n        log2_max_mv_length_horizontal = reader.decodeExponentialGolombNumber();\n        log2_max_mv_length_vertical = reader.decodeExponentialGolombNumber();\n    }\n    return {\n        aspect_ratio_info_present_flag,\n        aspect_ratio_idc,\n        sar_width,\n        sar_height,\n        overscan_info_present_flag,\n        overscan_appropriate_flag,\n        video_signal_type_present_flag,\n        video_format,\n        video_full_range_flag,\n        colour_description_present_flag,\n        colour_primaries,\n        transfer_characteristics,\n        matrix_coeffs,\n        chroma_loc_info_present_flag,\n        chroma_sample_loc_type_top_field,\n        chroma_sample_loc_type_bottom_field,\n        neutral_chroma_indication_flag,\n        field_seq_flag,\n        frame_field_info_present_flag,\n        default_display_window_flag,\n        def_disp_win_left_offset,\n        def_disp_win_right_offset,\n        def_disp_win_top_offset,\n        def_disp_win_bottom_offset,\n        vui_timing_info_present_flag,\n        vui_num_units_in_tick,\n        vui_time_scale,\n        vui_poc_proportional_to_timing_flag,\n        vui_num_ticks_poc_diff_one_minus1,\n        vui_hrd_parameters_present_flag,\n        vui_hrd_parameters,\n        bitstream_restriction_flag,\n        tiles_fixed_structure_flag,\n        motion_vectors_over_pic_boundaries_flag,\n        restricted_ref_pic_lists_flag,\n        min_spatial_segmentation_idc,\n        max_bytes_per_pic_denom,\n        max_bits_per_min_cu_denom,\n        log2_max_mv_length_horizontal,\n        log2_max_mv_length_vertical,\n    };\n}\n/**\n * E.2.2 HRD parameters syntax\n */\nexport function h265ParseHrdParameters(reader, commonInfPresentFlag, maxNumSubLayersMinus1) {\n    let nal_hrd_parameters_present_flag;\n    let vcl_hrd_parameters_present_flag;\n    let sub_pic_hrd_params_present_flag;\n    let tick_divisor_minus2;\n    let du_cpb_removal_delay_increment_length_minus1;\n    let sub_pic_cpb_params_in_pic_timing_sei_flag;\n    let dpb_output_delay_du_length_minus1;\n    let bit_rate_scale;\n    let cpb_size_scale;\n    let cpb_size_du_scale;\n    let initial_cpb_removal_delay_length_minus1;\n    let au_cpb_removal_delay_length_minus1;\n    let dpb_output_delay_length_minus1;\n    if (commonInfPresentFlag) {\n        nal_hrd_parameters_present_flag = !!reader.next();\n        vcl_hrd_parameters_present_flag = !!reader.next();\n        if (nal_hrd_parameters_present_flag ||\n            vcl_hrd_parameters_present_flag) {\n            sub_pic_hrd_params_present_flag = !!reader.next();\n            if (sub_pic_hrd_params_present_flag) {\n                tick_divisor_minus2 = reader.read(8);\n                du_cpb_removal_delay_increment_length_minus1 = reader.read(5);\n                sub_pic_cpb_params_in_pic_timing_sei_flag = !!reader.next();\n                dpb_output_delay_du_length_minus1 = reader.read(5);\n            }\n            bit_rate_scale = reader.read(4);\n            cpb_size_scale = reader.read(4);\n            if (sub_pic_hrd_params_present_flag) {\n                cpb_size_du_scale = reader.read(4);\n            }\n            initial_cpb_removal_delay_length_minus1 = reader.read(5);\n            au_cpb_removal_delay_length_minus1 = reader.read(5);\n            dpb_output_delay_length_minus1 = reader.read(5);\n        }\n    }\n    const fixed_pic_rate_general_flag = [];\n    const fixed_pic_rate_within_cvs_flag = [];\n    const elemental_duration_in_tc_minus1 = [];\n    const low_delay_hrd_flag = [];\n    const cpb_cnt_minus1 = [];\n    const nalHrdParameters = [];\n    const vclHrdParameters = [];\n    for (let i = 0; i <= maxNumSubLayersMinus1; i += 1) {\n        fixed_pic_rate_general_flag[i] = !!reader.next();\n        if (!fixed_pic_rate_general_flag[i]) {\n            fixed_pic_rate_within_cvs_flag[i] = !!reader.next();\n        }\n        if (fixed_pic_rate_within_cvs_flag[i]) {\n            elemental_duration_in_tc_minus1[i] =\n                reader.decodeExponentialGolombNumber();\n        }\n        else {\n            low_delay_hrd_flag[i] = !!reader.next();\n        }\n        if (!low_delay_hrd_flag[i]) {\n            cpb_cnt_minus1[i] = reader.decodeExponentialGolombNumber();\n        }\n        if (nal_hrd_parameters_present_flag) {\n            nalHrdParameters[i] = h265ParseSubLayerHrdParameters(reader, i, getCpbCnt(cpb_cnt_minus1[i]));\n        }\n        if (vcl_hrd_parameters_present_flag) {\n            vclHrdParameters[i] = h265ParseSubLayerHrdParameters(reader, i, getCpbCnt(cpb_cnt_minus1[i]));\n        }\n    }\n    return {\n        nal_hrd_parameters_present_flag,\n        vcl_hrd_parameters_present_flag,\n        sub_pic_hrd_params_present_flag,\n        tick_divisor_minus2,\n        du_cpb_removal_delay_increment_length_minus1,\n        sub_pic_cpb_params_in_pic_timing_sei_flag,\n        dpb_output_delay_du_length_minus1,\n        bit_rate_scale,\n        cpb_size_scale,\n        cpb_size_du_scale,\n        initial_cpb_removal_delay_length_minus1,\n        au_cpb_removal_delay_length_minus1,\n        dpb_output_delay_length_minus1,\n        fixed_pic_rate_general_flag,\n        fixed_pic_rate_within_cvs_flag,\n        elemental_duration_in_tc_minus1,\n        low_delay_hrd_flag,\n        cpb_cnt_minus1,\n        nalHrdParameters,\n        vclHrdParameters,\n    };\n}\n/**\n * E.2.3 Sub-layer HRD parameters syntax\n */\nexport function h265ParseSubLayerHrdParameters(reader, subLayerId, CpbCnt) {\n    const bit_rate_value_minus1 = [];\n    const cpb_size_value_minus1 = [];\n    const cpb_size_du_value_minus1 = [];\n    const bit_rate_du_value_minus1 = [];\n    const cbr_flag = [];\n    for (let i = 0; i < CpbCnt; i += 1) {\n        bit_rate_value_minus1[i] = reader.decodeExponentialGolombNumber();\n        cpb_size_value_minus1[i] = reader.decodeExponentialGolombNumber();\n        if (subLayerId > 0) {\n            cbr_flag[i] = !!reader.next();\n        }\n    }\n    return {\n        bit_rate_value_minus1,\n        cpb_size_value_minus1,\n        cpb_size_du_value_minus1,\n        bit_rate_du_value_minus1,\n        cbr_flag,\n    };\n}\n/**\n * E.3.3 Sub-layer HRD parameters semantics\n */\nfunction getCpbCnt(cpb_cnt_minus_1) {\n    return cpb_cnt_minus_1 + 1;\n}\nexport function h265SearchConfiguration(buffer) {\n    let videoParameterSet;\n    let sequenceParameterSet;\n    let pictureParameterSet;\n    let count = 0;\n    for (const nalu of annexBSplitNalu(buffer)) {\n        const header = h265ParseNaluHeader(nalu);\n        const raw = {\n            ...header,\n            data: nalu,\n            rbsp: nalu.subarray(2),\n        };\n        switch (header.nal_unit_type) {\n            case 32:\n                videoParameterSet = raw;\n                break;\n            case 33:\n                sequenceParameterSet = raw;\n                break;\n            case 34:\n                pictureParameterSet = raw;\n                break;\n            default:\n                continue;\n        }\n        count += 1;\n        if (count === 3) {\n            return {\n                videoParameterSet,\n                sequenceParameterSet,\n                pictureParameterSet,\n            };\n        }\n    }\n    throw new Error(\"Invalid data\");\n}\nexport function h265ParseSpsMultilayerExtension(reader) {\n    const inter_view_mv_vert_constraint_flag = !!reader.next();\n    return {\n        inter_view_mv_vert_constraint_flag,\n    };\n}\nexport function h265ParseSps3dExtension(reader) {\n    const iv_di_mc_enabled_flag = [];\n    const iv_mv_scal_enabled_flag = [];\n    iv_di_mc_enabled_flag[0] = !!reader.next();\n    iv_mv_scal_enabled_flag[0] = !!reader.next();\n    const log2_ivmc_sub_pb_size_minus3 = reader.decodeExponentialGolombNumber();\n    const iv_res_pred_enabled_flag = !!reader.next();\n    const depth_ref_enabled_flag = !!reader.next();\n    const vsp_mc_enabled_flag = !!reader.next();\n    const dbbp_enabled_flag = !!reader.next();\n    iv_di_mc_enabled_flag[1] = !!reader.next();\n    iv_mv_scal_enabled_flag[1] = !!reader.next();\n    const tex_mc_enabled_flag = !!reader.next();\n    const log2_texmc_sub_pb_size_minus3 = reader.decodeExponentialGolombNumber();\n    const intra_contour_enabled_flag = !!reader.next();\n    const intra_dc_only_wedge_enabled_flag = !!reader.next();\n    const cqt_cu_part_pred_enabled_flag = !!reader.next();\n    const inter_dc_only_enabled_flag = !!reader.next();\n    const skip_intra_enabled_flag = !!reader.next();\n    return {\n        iv_di_mc_enabled_flag,\n        iv_mv_scal_enabled_flag,\n        log2_ivmc_sub_pb_size_minus3,\n        iv_res_pred_enabled_flag,\n        depth_ref_enabled_flag,\n        vsp_mc_enabled_flag,\n        dbbp_enabled_flag,\n        tex_mc_enabled_flag,\n        log2_texmc_sub_pb_size_minus3,\n        intra_contour_enabled_flag,\n        intra_dc_only_wedge_enabled_flag,\n        cqt_cu_part_pred_enabled_flag,\n        inter_dc_only_enabled_flag,\n        skip_intra_enabled_flag,\n    };\n}\nexport function h265ParseConfiguration(data) {\n    const { videoParameterSet, sequenceParameterSet, pictureParameterSet } = h265SearchConfiguration(data);\n    const { profileTierLevel: { generalProfileTier: { profile_space: generalProfileSpace, tier_flag: generalTierFlag, profile_idc: generalProfileIndex, profileCompatibilitySet: generalProfileCompatibilitySet, constraintSet: generalConstraintSet, }, general_level_idc: generalLevelIndex, }, } = h265ParseVideoParameterSet(videoParameterSet.rbsp);\n    const { chroma_format_idc, pic_width_in_luma_samples: encodedWidth, pic_height_in_luma_samples: encodedHeight, conf_win_left_offset: cropLeft = 0, conf_win_right_offset: cropRight = 0, conf_win_top_offset: cropTop = 0, conf_win_bottom_offset: cropBottom = 0, } = h265ParseSequenceParameterSet(sequenceParameterSet.rbsp);\n    const SubWidthC = getSubWidthC(chroma_format_idc);\n    const SubHeightC = getSubHeightC(chroma_format_idc);\n    const croppedWidth = encodedWidth - SubWidthC * (cropLeft + cropRight);\n    const croppedHeight = encodedHeight - SubHeightC * (cropTop + cropBottom);\n    return {\n        videoParameterSet,\n        sequenceParameterSet,\n        pictureParameterSet,\n        generalProfileSpace,\n        generalProfileIndex,\n        generalProfileCompatibilitySet,\n        generalTierFlag,\n        generalLevelIndex,\n        generalConstraintSet,\n        encodedWidth,\n        encodedHeight,\n        cropLeft,\n        cropRight,\n        cropTop,\n        cropBottom,\n        croppedWidth,\n        croppedHeight,\n    };\n}\n//# sourceMappingURL=h265.js.map","export function hexDigits(value) {\n    return value.toString(16).toUpperCase();\n}\nexport function hexTwoDigits(value) {\n    return value.toString(16).toUpperCase().padStart(2, \"0\");\n}\nexport function decimalTwoDigits(value) {\n    return value.toString(10).padStart(2, \"0\");\n}\n//# sourceMappingURL=utils.js.map","import { Av1 } from \"@yume-chan/scrcpy\";\nimport { decimalTwoDigits } from \"./utils.js\";\nexport class Av1Codec {\n    #decoder;\n    #updateSize;\n    constructor(decoder, updateSize) {\n        this.#decoder = decoder;\n        this.#updateSize = updateSize;\n    }\n    #configure(data) {\n        const parser = new Av1(data);\n        const sequenceHeader = parser.searchSequenceHeaderObu();\n        if (!sequenceHeader) {\n            return;\n        }\n        const { seq_profile: seqProfile, seq_level_idx: [seqLevelIdx = 0], max_frame_width_minus_1, max_frame_height_minus_1, color_config: { BitDepth, mono_chrome: monoChrome, subsampling_x: subsamplingX, subsampling_y: subsamplingY, chroma_sample_position: chromaSamplePosition, color_description_present_flag, }, } = sequenceHeader;\n        let colorPrimaries;\n        let transferCharacteristics;\n        let matrixCoefficients;\n        let colorRange;\n        if (color_description_present_flag) {\n            ({\n                color_primaries: colorPrimaries,\n                transfer_characteristics: transferCharacteristics,\n                matrix_coefficients: matrixCoefficients,\n                color_range: colorRange,\n            } = sequenceHeader.color_config);\n        }\n        else {\n            colorPrimaries = Av1.ColorPrimaries.Bt709;\n            transferCharacteristics = Av1.TransferCharacteristics.Bt709;\n            matrixCoefficients = Av1.MatrixCoefficients.Bt709;\n            colorRange = false;\n        }\n        const width = max_frame_width_minus_1 + 1;\n        const height = max_frame_height_minus_1 + 1;\n        this.#updateSize(width, height);\n        const codec = [\n            \"av01\",\n            seqProfile.toString(16),\n            decimalTwoDigits(seqLevelIdx) +\n                (sequenceHeader.seq_tier[0] ? \"H\" : \"M\"),\n            decimalTwoDigits(BitDepth),\n            monoChrome ? \"1\" : \"0\",\n            (subsamplingX ? \"1\" : \"0\") +\n                (subsamplingY ? \"1\" : \"0\") +\n                chromaSamplePosition.toString(),\n            decimalTwoDigits(colorPrimaries),\n            decimalTwoDigits(transferCharacteristics),\n            decimalTwoDigits(matrixCoefficients),\n            colorRange ? \"1\" : \"0\",\n        ].join(\".\");\n        this.#decoder.configure({\n            codec,\n            optimizeForLatency: true,\n        });\n    }\n    decode(packet) {\n        if (packet.type === \"configuration\") {\n            return;\n        }\n        this.#configure(packet.data);\n        this.#decoder.decode(new EncodedVideoChunk({\n            // Treat `undefined` as `key`, otherwise it won't decode.\n            type: packet.keyframe === false ? \"delta\" : \"key\",\n            timestamp: 0,\n            data: packet.data,\n        }));\n    }\n}\n//# sourceMappingURL=av1.js.map","export class H26xDecoder {\n    #config;\n    #decoder;\n    constructor(decoder) {\n        this.#decoder = decoder;\n    }\n    decode(packet) {\n        if (packet.type === \"configuration\") {\n            this.#config = packet.data;\n            this.configure(packet.data);\n            return;\n        }\n        // For H.264 and H.265, when the stream is in Annex B format\n        // (which Scrcpy uses, as Android MediaCodec produces),\n        // configuration data needs to be combined with the first frame data.\n        // https://www.w3.org/TR/webcodecs-avc-codec-registration/#encodedvideochunk-type\n        let data;\n        if (this.#config !== undefined) {\n            data = new Uint8Array(this.#config.length + packet.data.length);\n            data.set(this.#config, 0);\n            data.set(packet.data, this.#config.length);\n            this.#config = undefined;\n        }\n        else {\n            data = packet.data;\n        }\n        this.#decoder.decode(new EncodedVideoChunk({\n            // Treat `undefined` as `key`, otherwise won't decode.\n            type: packet.keyframe === false ? \"delta\" : \"key\",\n            timestamp: 0,\n            data,\n        }));\n    }\n}\n//# sourceMappingURL=h26x.js.map","import { h264ParseConfiguration } from \"@yume-chan/scrcpy\";\nimport { H26xDecoder } from \"./h26x.js\";\nimport { hexTwoDigits } from \"./utils.js\";\nexport class H264Decoder extends H26xDecoder {\n    #decoder;\n    #updateSize;\n    constructor(decoder, updateSize) {\n        super(decoder);\n        this.#decoder = decoder;\n        this.#updateSize = updateSize;\n    }\n    configure(data) {\n        const { profileIndex, constraintSet, levelIndex, croppedWidth, croppedHeight, } = h264ParseConfiguration(data);\n        this.#updateSize(croppedWidth, croppedHeight);\n        // https://www.rfc-editor.org/rfc/rfc6381#section-3.3\n        // ISO Base Media File Format Name Space\n        const codec = \"avc1.\" +\n            hexTwoDigits(profileIndex) +\n            hexTwoDigits(constraintSet) +\n            hexTwoDigits(levelIndex);\n        this.#decoder.configure({\n            codec: codec,\n            optimizeForLatency: true,\n        });\n    }\n}\n//# sourceMappingURL=h264.js.map","import { getUint32LittleEndian } from \"@yume-chan/no-data-view\";\nimport { h265ParseConfiguration } from \"@yume-chan/scrcpy\";\nimport { H26xDecoder } from \"./h26x.js\";\nimport { hexDigits } from \"./utils.js\";\nexport class H265Decoder extends H26xDecoder {\n    #decoder;\n    #updateSize;\n    constructor(decoder, updateSize) {\n        super(decoder);\n        this.#decoder = decoder;\n        this.#updateSize = updateSize;\n    }\n    configure(data) {\n        const { generalProfileSpace, generalProfileIndex, generalProfileCompatibilitySet, generalTierFlag, generalLevelIndex, generalConstraintSet, croppedWidth, croppedHeight, } = h265ParseConfiguration(data);\n        this.#updateSize(croppedWidth, croppedHeight);\n        const codec = [\n            \"hev1\",\n            [\"\", \"A\", \"B\", \"C\"][generalProfileSpace] +\n                generalProfileIndex.toString(),\n            hexDigits(getUint32LittleEndian(generalProfileCompatibilitySet, 0)),\n            (generalTierFlag ? \"H\" : \"L\") + generalLevelIndex.toString(),\n            ...Array.from(generalConstraintSet, hexDigits),\n        ].join(\".\");\n        this.#decoder.configure({\n            codec,\n            // Microsoft Edge requires explicit size to work\n            codedWidth: croppedWidth,\n            codedHeight: croppedHeight,\n            optimizeForLatency: true,\n        });\n    }\n}\n//# sourceMappingURL=h265.js.map","export class EventEmitter {\n    listeners = [];\n    constructor() {\n        this.event = this.event.bind(this);\n    }\n    addEventListener(info) {\n        this.listeners.push(info);\n        const remove = () => {\n            const index = this.listeners.indexOf(info);\n            if (index !== -1) {\n                this.listeners.splice(index, 1);\n            }\n        };\n        remove.dispose = remove;\n        return remove;\n    }\n    event = (listener, thisArg, ...args) => {\n        const info = {\n            listener: listener,\n            thisArg,\n            args,\n        };\n        return this.addEventListener(info);\n    };\n    fire(e) {\n        for (const info of this.listeners.slice()) {\n            info.listener.call(info.thisArg, e, ...info.args);\n        }\n    }\n    dispose() {\n        this.listeners.length = 0;\n    }\n}\n//# sourceMappingURL=event-emitter.js.map","import { EventEmitter } from \"./event-emitter.js\";\nconst Undefined = Symbol(\"undefined\");\nexport class StickyEventEmitter extends EventEmitter {\n    #value = Undefined;\n    addEventListener(info) {\n        if (this.#value !== Undefined) {\n            info.listener.call(info.thisArg, this.#value, ...info.args);\n        }\n        return super.addEventListener(info);\n    }\n    fire(e) {\n        this.#value = e;\n        super.fire(e);\n    }\n}\n//# sourceMappingURL=sticky-event-emitter.js.map","export class Pool {\n    #controller;\n    #readable = new ReadableStream({\n        start: (controller) => {\n            this.#controller = controller;\n        },\n        pull: (controller) => {\n            controller.enqueue(this.#initializer());\n        },\n    }, { highWaterMark: 0 });\n    #reader = this.#readable.getReader();\n    #initializer;\n    #size = 0;\n    #capacity;\n    constructor(initializer, capacity) {\n        this.#initializer = initializer;\n        this.#capacity = capacity;\n    }\n    async borrow() {\n        const result = await this.#reader.read();\n        return result.value;\n    }\n    return(value) {\n        if (this.#size < this.#capacity) {\n            this.#controller.enqueue(value);\n            this.#size += 1;\n        }\n    }\n}\n//# sourceMappingURL=pool.js.map","export class VideoFrameCapturer {\n    #canvas;\n    #context;\n    constructor() {\n        if (typeof OffscreenCanvas !== \"undefined\") {\n            this.#canvas = new OffscreenCanvas(1, 1);\n        }\n        else {\n            this.#canvas = document.createElement(\"canvas\");\n            this.#canvas.width = 1;\n            this.#canvas.height = 1;\n        }\n        this.#context = this.#canvas.getContext(\"bitmaprenderer\", {\n            alpha: false,\n        });\n    }\n    async capture(frame) {\n        this.#canvas.width = frame.displayWidth;\n        this.#canvas.height = frame.displayHeight;\n        const bitmap = await createImageBitmap(frame);\n        this.#context.transferFromImageBitmap(bitmap);\n        if (this.#canvas instanceof OffscreenCanvas) {\n            return await this.#canvas.convertToBlob({\n                type: \"image/png\",\n            });\n        }\n        else {\n            return new Promise((resolve, reject) => {\n                this.#canvas.toBlob((blob) => {\n                    if (!blob) {\n                        reject(new Error(\"Failed to convert canvas to blob\"));\n                    }\n                    else {\n                        resolve(blob);\n                    }\n                }, \"image/png\");\n            });\n        }\n    }\n}\n//# sourceMappingURL=snapshot.js.map","import { StickyEventEmitter } from \"@yume-chan/event\";\nimport { ScrcpyVideoCodecId } from \"@yume-chan/scrcpy\";\nimport { WritableStream } from \"@yume-chan/stream-extra\";\nimport { Av1Codec, H264Decoder, H265Decoder } from \"./codec/index.js\";\nimport { Pool } from \"./pool.js\";\nimport { VideoFrameCapturer } from \"./snapshot.js\";\nconst VideoFrameCapturerPool = \n/* #__PURE__ */\nnew Pool(() => new VideoFrameCapturer(), 4);\nexport class WebCodecsVideoDecoder {\n    static get isSupported() {\n        return typeof globalThis.VideoDecoder !== \"undefined\";\n    }\n    static capabilities = {\n        h264: {},\n        h265: {},\n        av1: {},\n    };\n    #codec;\n    get codec() {\n        return this.#codec;\n    }\n    #codecDecoder;\n    #writable;\n    get writable() {\n        return this.#writable;\n    }\n    #error;\n    #controller;\n    #renderer;\n    get renderer() {\n        return this.#renderer;\n    }\n    #framesDraw = 0;\n    #framesPresented = 0;\n    get framesRendered() {\n        return this.#framesPresented;\n    }\n    #framesSkipped = 0;\n    get framesSkipped() {\n        return this.#framesSkipped;\n    }\n    #sizeChanged = new StickyEventEmitter();\n    get sizeChanged() {\n        return this.#sizeChanged.event;\n    }\n    #width = 0;\n    get width() {\n        return this.#width;\n    }\n    #height = 0;\n    get height() {\n        return this.#height;\n    }\n    #decoder;\n    #drawing = false;\n    #nextFrame;\n    #captureFrame;\n    #animationFrameId = 0;\n    /**\n     * Create a new WebCodecs video decoder.\n     */\n    constructor({ codec, renderer }) {\n        this.#codec = codec;\n        this.#renderer = renderer;\n        this.#decoder = new VideoDecoder({\n            output: (frame) => {\n                this.#captureFrame?.close();\n                // PERF: `VideoFrame#clone` is cheap\n                this.#captureFrame = frame.clone();\n                if (this.#drawing) {\n                    if (this.#nextFrame) {\n                        this.#nextFrame.close();\n                        this.#framesSkipped += 1;\n                    }\n                    this.#nextFrame = frame;\n                    return;\n                }\n                void this.#draw(frame);\n            },\n            error: (error) => {\n                this.#setError(error);\n            },\n        });\n        switch (this.#codec) {\n            case ScrcpyVideoCodecId.H264:\n                this.#codecDecoder = new H264Decoder(this.#decoder, this.#updateSize);\n                break;\n            case ScrcpyVideoCodecId.H265:\n                this.#codecDecoder = new H265Decoder(this.#decoder, this.#updateSize);\n                break;\n            case ScrcpyVideoCodecId.AV1:\n                this.#codecDecoder = new Av1Codec(this.#decoder, this.#updateSize);\n                break;\n            default:\n                throw new Error(`Unsupported codec: ${this.#codec}`);\n        }\n        this.#writable = new WritableStream({\n            start: (controller) => {\n                if (this.#error) {\n                    controller.error(this.#error);\n                }\n                else {\n                    this.#controller = controller;\n                }\n            },\n            write: (packet) => {\n                this.#codecDecoder.decode(packet);\n            },\n        });\n        this.#handleAnimationFrame();\n    }\n    #setError(error) {\n        if (this.#controller) {\n            try {\n                this.#controller.error(error);\n            }\n            catch {\n                // ignore\n            }\n        }\n        else {\n            this.#error = error;\n        }\n    }\n    async #draw(frame) {\n        try {\n            this.#drawing = true;\n            // PERF: Draw every frame to minimize latency at cost of performance.\n            // When multiple frames are drawn in one vertical sync interval,\n            // only the last one is visible to users.\n            // But this ensures users can always see the most up-to-date screen.\n            // This is also the behavior of official Scrcpy client.\n            // https://github.com/Genymobile/scrcpy/issues/3679\n            this.#updateSize(frame.displayWidth, frame.displayHeight);\n            await this.#renderer.draw(frame);\n            this.#framesDraw += 1;\n            frame.close();\n            if (this.#nextFrame) {\n                const frame = this.#nextFrame;\n                this.#nextFrame = undefined;\n                await this.#draw(frame);\n            }\n            this.#drawing = false;\n        }\n        catch (error) {\n            this.#setError(error);\n        }\n    }\n    #updateSize = (width, height) => {\n        this.#renderer.setSize(width, height);\n        this.#width = width;\n        this.#height = height;\n        this.#sizeChanged.fire({ width, height });\n    };\n    #handleAnimationFrame = () => {\n        if (this.#framesDraw > 0) {\n            this.#framesPresented += 1;\n            this.#framesSkipped += this.#framesDraw - 1;\n            this.#framesDraw = 0;\n        }\n        this.#animationFrameId = requestAnimationFrame(this.#handleAnimationFrame);\n    };\n    async snapshot() {\n        const frame = this.#captureFrame;\n        if (!frame) {\n            return undefined;\n        }\n        const capturer = await VideoFrameCapturerPool.borrow();\n        const result = await capturer.capture(frame);\n        VideoFrameCapturerPool.return(capturer);\n        return result;\n    }\n    dispose() {\n        cancelAnimationFrame(this.#animationFrameId);\n        if (this.#decoder.state !== \"closed\") {\n            this.#decoder.close();\n        }\n        this.#nextFrame?.close();\n        this.#captureFrame?.close();\n    }\n}\n//# sourceMappingURL=decoder.js.map","(function() {\n  \"use strict\";\n\n  /**\n   * Create a YUVCanvas and attach it to an HTML5 canvas element.\n   *\n   * This will take over the drawing context of the canvas and may turn\n   * it into a WebGL 3d canvas if possible. Do not attempt to use the\n   * drawing context directly after this.\n   *\n   * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n   * @param {YUVCanvasOptions} options - map of options\n   * @throws exception if WebGL requested but unavailable\n   * @constructor\n   * @abstract\n   */\n  function FrameSink(canvas, options) {\n    throw new Error('abstract');\n  }\n\n  /**\n   * Draw a single YUV frame on the underlying canvas, converting to RGB.\n   * If necessary the canvas will be resized to the optimal pixel size\n   * for the given buffer's format.\n   *\n   * @param {YUVBuffer} buffer - the YUV buffer to draw\n   * @see {@link https://www.npmjs.com/package/yuv-buffer|yuv-buffer} for format\n   */\n  FrameSink.prototype.drawFrame = function(buffer) {\n    throw new Error('abstract');\n  };\n\n  /**\n   * Clear the canvas using appropriate underlying 2d or 3d context.\n   */\n  FrameSink.prototype.clear = function() {\n    throw new Error('abstract');\n  };\n\n  module.exports = FrameSink;\n\n})();\n","/*\nCopyright (c) 2014-2024 Brooke Vibber <bvibber@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n  \"use strict\";\n\n  /**\n   * Convert a ratio into a bit-shift count; for instance a ratio of 2\n   * becomes a bit-shift of 1, while a ratio of 1 is a bit-shift of 0.\n   *\n   * @author Brooke Vibber <bvibber@pobox.com>\n   * @copyright 2016-2024\n   * @license MIT-style\n   *\n   * @param {number} ratio - the integer ratio to convert.\n   * @returns {number} - number of bits to shift to multiply/divide by the ratio.\n   * @throws exception if given a non-power-of-two\n   */\n  function depower(ratio) {\n    var shiftCount = 0,\n      n = ratio >> 1;\n    while (n != 0) {\n      n = n >> 1;\n      shiftCount++\n    }\n    if (ratio !== (1 << shiftCount)) {\n      throw 'chroma plane dimensions must be power of 2 ratio to luma plane dimensions; got ' + ratio;\n    }\n    return shiftCount;\n  }\n\n  module.exports = depower;\n})();\n","/*\nCopyright (c) 2014-2024 Brooke Vibber <bvibber@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar depower = require('./depower.js');\n\n\t/**\n\t * Basic YCbCr->RGB conversion\n\t *\n\t * @author Brooke Vibber <bvibber@pobox.com>\n\t * @copyright 2014-2024\n\t * @license MIT-style\n\t *\n\t * @param {YUVFrame} buffer - input frame buffer\n\t * @param {Uint8ClampedArray} output - array to draw RGBA into\n\t * Assumes that the output array already has alpha channel set to opaque.\n\t */\n\tfunction convertYCbCr(buffer, output) {\n\t\tvar width = buffer.format.width | 0,\n\t\t\theight = buffer.format.height | 0,\n\t\t\thdec = depower(buffer.format.width / buffer.format.chromaWidth) | 0,\n\t\t\tvdec = depower(buffer.format.height / buffer.format.chromaHeight) | 0,\n\t\t\tbytesY = buffer.y.bytes,\n\t\t\tbytesCb = buffer.u.bytes,\n\t\t\tbytesCr = buffer.v.bytes,\n\t\t\tstrideY = buffer.y.stride | 0,\n\t\t\tstrideCb = buffer.u.stride | 0,\n\t\t\tstrideCr = buffer.v.stride | 0,\n\t\t\toutStride = width << 2,\n\t\t\tYPtr = 0, Y0Ptr = 0, Y1Ptr = 0,\n\t\t\tCbPtr = 0, CrPtr = 0,\n\t\t\toutPtr = 0, outPtr0 = 0, outPtr1 = 0,\n\t\t\tcolorCb = 0, colorCr = 0,\n\t\t\tmultY = 0, multCrR = 0, multCbCrG = 0, multCbB = 0,\n\t\t\tx = 0, y = 0, xdec = 0, ydec = 0;\n\n\t\tif (hdec == 1 && vdec == 1) {\n\t\t\t// Optimize for 4:2:0, which is most common\n\t\t\toutPtr0 = 0;\n\t\t\toutPtr1 = outStride;\n\t\t\tydec = 0;\n\t\t\tfor (y = 0; y < height; y += 2) {\n\t\t\t\tY0Ptr = y * strideY | 0;\n\t\t\t\tY1Ptr = Y0Ptr + strideY | 0;\n\t\t\t\tCbPtr = ydec * strideCb | 0;\n\t\t\t\tCrPtr = ydec * strideCr | 0;\n\t\t\t\tfor (x = 0; x < width; x += 2) {\n\t\t\t\t\tcolorCb = bytesCb[CbPtr++] | 0;\n\t\t\t\t\tcolorCr = bytesCr[CrPtr++] | 0;\n\n\t\t\t\t\t// Quickie YUV conversion\n\t\t\t\t\t// https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.2020_conversion\n\t\t\t\t\t// multiplied by 256 for integer-friendliness\n\t\t\t\t\tmultCrR   = (409 * colorCr | 0) - 57088 | 0;\n\t\t\t\t\tmultCbCrG = (100 * colorCb | 0) + (208 * colorCr | 0) - 34816 | 0;\n\t\t\t\t\tmultCbB   = (516 * colorCb | 0) - 70912 | 0;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y0Ptr++] | 0;\n\t\t\t\t\toutput[outPtr0    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr0 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr0 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr0 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y0Ptr++] | 0;\n\t\t\t\t\toutput[outPtr0    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr0 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr0 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr0 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y1Ptr++] | 0;\n\t\t\t\t\toutput[outPtr1    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr1 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr1 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr1 += 4;\n\n\t\t\t\t\tmultY = 298 * bytesY[Y1Ptr++] | 0;\n\t\t\t\t\toutput[outPtr1    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr1 + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr1 + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr1 += 4;\n\t\t\t\t}\n\t\t\t\toutPtr0 += outStride;\n\t\t\t\toutPtr1 += outStride;\n\t\t\t\tydec++;\n\t\t\t}\n\t\t} else {\n\t\t\toutPtr = 0;\n\t\t\tfor (y = 0; y < height; y++) {\n\t\t\t\txdec = 0;\n\t\t\t\tydec = y >> vdec;\n\t\t\t\tYPtr = y * strideY | 0;\n\t\t\t\tCbPtr = ydec * strideCb | 0;\n\t\t\t\tCrPtr = ydec * strideCr | 0;\n\n\t\t\t\tfor (x = 0; x < width; x++) {\n\t\t\t\t\txdec = x >> hdec;\n\t\t\t\t\tcolorCb = bytesCb[CbPtr + xdec] | 0;\n\t\t\t\t\tcolorCr = bytesCr[CrPtr + xdec] | 0;\n\n\t\t\t\t\t// Quickie YUV conversion\n\t\t\t\t\t// https://en.wikipedia.org/wiki/YCbCr#ITU-R_BT.2020_conversion\n\t\t\t\t\t// multiplied by 256 for integer-friendliness\n\t\t\t\t\tmultCrR   = (409 * colorCr | 0) - 57088 | 0;\n\t\t\t\t\tmultCbCrG = (100 * colorCb | 0) + (208 * colorCr | 0) - 34816 | 0;\n\t\t\t\t\tmultCbB   = (516 * colorCb | 0) - 70912 | 0;\n\n\t\t\t\t\tmultY = 298 * bytesY[YPtr++] | 0;\n\t\t\t\t\toutput[outPtr    ] = (multY + multCrR) >> 8;\n\t\t\t\t\toutput[outPtr + 1] = (multY - multCbCrG) >> 8;\n\t\t\t\t\toutput[outPtr + 2] = (multY + multCbB) >> 8;\n\t\t\t\t\toutPtr += 4;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tmodule.exports = {\n\t\tconvertYCbCr: convertYCbCr\n\t};\n})();\n","/*\nCopyright (c) 2014-20124 Brooke Vibber <bvibber@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar FrameSink = require('./FrameSink.js'),\n\t\tYCbCr = require('./YCbCr.js');\n\n\t/**\n\t * @param {HTMLCanvasElement} canvas - HTML canvas eledment to attach to\n\t * @constructor\n\t */\n\tfunction SoftwareFrameSink(canvas) {\n\t\tvar self = this,\n\t\t\tctx = canvas.getContext('2d'),\n\t\t\timageData = null,\n\t\t\tresampleCanvas = null,\n\t\t\tresampleContext = null;\n\n\n\n\t\tfunction initImageData(width, height) {\n\t\t\timageData = ctx.createImageData(width, height);\n\n\t\t\t// Prefill the alpha to opaque\n\t\t\tvar data = imageData.data,\n\t\t\t\tpixelCount = width * height * 4;\n\t\t\tfor (var i = 0; i < pixelCount; i += 4) {\n\t\t\t\tdata[i + 3] = 255;\n\t\t\t}\n\t\t}\n\n\t\tfunction initResampleCanvas(cropWidth, cropHeight) {\n\t\t\tresampleCanvas = document.createElement('canvas');\n\t\t\tresampleCanvas.width = cropWidth;\n\t\t\tresampleCanvas.height = cropHeight;\n\t\t\tresampleContext = resampleCanvas.getContext('2d');\n\t\t}\n\n\t\t/**\n\t\t * Actually draw a frame into the canvas.\n\t\t * @param {YUVFrame} buffer - YUV frame buffer object to draw\n\t\t */\n\t\tself.drawFrame = function drawFrame(buffer) {\n\t\t\tvar format = buffer.format;\n\n\t\t\tif (canvas.width !== format.displayWidth || canvas.height !== format.displayHeight) {\n\t\t\t\t// Keep the canvas at the right size...\n\t\t\t\tcanvas.width = format.displayWidth;\n\t\t\t\tcanvas.height = format.displayHeight;\n\t\t\t}\n\n\t\t\tif (imageData === null ||\n\t\t\t\t\timageData.width != format.width ||\n\t\t\t\t\timageData.height != format.height) {\n\t\t\t\tinitImageData(format.width, format.height);\n\t\t\t}\n\n\t\t\t// YUV -> RGB over the entire encoded frame\n\t\t\tYCbCr.convertYCbCr(buffer, imageData.data);\n\n\t\t\tvar resample = (format.cropWidth != format.displayWidth || format.cropHeight != format.displayHeight);\n\t\t\tvar drawContext;\n\t\t\tif (resample) {\n\t\t\t\t// hack for non-square aspect-ratio\n\t\t\t\t// putImageData doesn't resample, so we have to draw in two steps.\n\t\t\t\tif (!resampleCanvas) {\n\t\t\t\t\tinitResampleCanvas(format.cropWidth, format.cropHeight);\n\t\t\t\t}\n\t\t\t\tdrawContext = resampleContext;\n\t\t\t} else {\n\t\t\t\tdrawContext = ctx;\n\t\t\t}\n\n\t\t\t// Draw cropped frame to either the final or temporary canvas\n\t\t\tdrawContext.putImageData(imageData,\n\t\t\t\t-format.cropLeft, -format.cropTop, // must offset the offset\n\t\t\t\tformat.cropLeft, format.cropTop,\n\t\t\t\tformat.cropWidth, format.cropHeight);\n\n\t\t\tif (resample) {\n\t\t\t\tctx.drawImage(resampleCanvas, 0, 0, format.displayWidth, format.displayHeight);\n\t\t\t}\n\t\t};\n\n\t\tself.clear = function() {\n\t\t\tctx.clearRect(0, 0, canvas.width, canvas.height);\n\t\t};\n\n\t\treturn self;\n\t}\n\n\tSoftwareFrameSink.prototype = Object.create(FrameSink.prototype);\n\n\tmodule.exports = SoftwareFrameSink;\n})();\n","/*\nCopyright (c) 2014-2024 Brooke Vibber <bvibber@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n  \"use strict\";\n\n  var FrameSink = require('./FrameSink.js'),\n    SoftwareFrameSink = require('./SoftwareFrameSink.js'),\n    WebGLFrameSink = require('./WebGLFrameSink.js');\n\n  /**\n   * @typedef {Object} YUVCanvasOptions\n   * @property {boolean} webGL - Whether to use WebGL to draw to the canvas and accelerate color space conversion. If left out, defaults to auto-detect.\n   */\n\n  var YUVCanvas = {\n    FrameSink: FrameSink,\n\n    SoftwareFrameSink: SoftwareFrameSink,\n\n    WebGLFrameSink: WebGLFrameSink,\n\n    /**\n     * Attach a suitable FrameSink instance to an HTML5 canvas element.\n     *\n     * This will take over the drawing context of the canvas and may turn\n     * it into a WebGL 3d canvas if possible. Do not attempt to use the\n     * drawing context directly after this.\n     *\n     * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n     * @param {YUVCanvasOptions} options - map of options\n     * @returns {FrameSink} - instance of suitable subclass.\n     */\n    attach: function(canvas, options) {\n      options = options || {};\n      var webGL = ('webGL' in options) ? options.webGL : WebGLFrameSink.isAvailable();\n      if (webGL) {\n        return new WebGLFrameSink(canvas, options);\n      } else {\n        return new SoftwareFrameSink(canvas, options);\n      }\n    }\n  };\n\n  module.exports = YUVCanvas;\n})();\n","/*\nCopyright (c) 2014-2024 Brooke Vibber <bvibber@pobox.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n(function() {\n\t\"use strict\";\n\n\tvar FrameSink = require('./FrameSink.js'),\n\t\tshaders = require('../build/shaders.js');\n\n\t/**\n\t * Warning: canvas must not have been used for 2d drawing prior!\n\t *\n\t * @param {HTMLCanvasElement} canvas - HTML canvas element to attach to\n\t * @constructor\n\t */\n\tfunction WebGLFrameSink(canvas) {\n\t\tvar self = this,\n\t\t\tgl = WebGLFrameSink.contextForCanvas(canvas),\n\t\t\tdebug = false; // swap this to enable more error checks, which can slow down rendering\n\n\t\tif (gl === null) {\n\t\t\tthrow new Error('WebGL unavailable');\n\t\t}\n\n\t\t// GL!\n\t\tfunction checkError() {\n\t\t\tif (debug) {\n\t\t\t\terr = gl.getError();\n\t\t\t\tif (err !== 0) {\n\t\t\t\t\tthrow new Error(\"GL error \" + err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction compileShader(type, source) {\n\t\t\tvar shader = gl.createShader(type);\n\t\t\tgl.shaderSource(shader, source);\n\t\t\tgl.compileShader(shader);\n\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n\t\t\t\tvar err = gl.getShaderInfoLog(shader);\n\t\t\t\tgl.deleteShader(shader);\n\t\t\t\tthrow new Error('GL shader compilation for ' + type + ' failed: ' + err);\n\t\t\t}\n\n\t\t\treturn shader;\n\t\t}\n\n\n\t\tvar program,\n\t\t\tunpackProgram,\n\t\t\terr;\n\n\t\t// In the world of GL there are no rectangles.\n\t\t// There are only triangles.\n\t\t// THERE IS NO SPOON.\n\t\tvar rectangle = new Float32Array([\n\t\t\t// First triangle (top left, clockwise)\n\t\t\t-1.0, -1.0,\n\t\t\t+1.0, -1.0,\n\t\t\t-1.0, +1.0,\n\n\t\t\t// Second triangle (bottom right, clockwise)\n\t\t\t-1.0, +1.0,\n\t\t\t+1.0, -1.0,\n\t\t\t+1.0, +1.0\n\t\t]);\n\n\t\tvar textures = {};\n\t\tvar framebuffers = {};\n\t\tvar stripes = {};\n\t\tvar buf, positionLocation, unpackPositionLocation;\n\t\tvar unpackTexturePositionBuffer, unpackTexturePositionLocation;\n\t\tvar stripeLocation, unpackTextureLocation;\n\t\tvar lumaPositionBuffer, lumaPositionLocation;\n\t\tvar chromaPositionBuffer, chromaPositionLocation;\n\n\t\tfunction createOrReuseTexture(name, formatUpdate) {\n\t\t\tif (!textures[name] || formatUpdate) {\n\t\t\t\ttextures[name] = gl.createTexture();\n\t\t\t}\n\t\t\treturn textures[name];\n\t\t}\n\n\t\tfunction uploadTexture(name, formatUpdate, width, height, data) {\n\t\t\tvar create = !textures[name] || formatUpdate;\n\t\t\tvar texture = createOrReuseTexture(name, formatUpdate);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\tvar uploadTemp = !textures[name + '_temp'] || formatUpdate;\n\t\t\t\tvar tempTexture = createOrReuseTexture(name + '_temp', formatUpdate);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, tempTexture);\n\t\t\t\tif (uploadTemp) {\n\t\t\t\t\t// new texture\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\t\twidth / 4,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, // type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\t// update texture\n\t\t\t\t\tgl.texSubImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\t0, // x offset\n\t\t\t\t\t\t0, // y offset\n\t\t\t\t\t\twidth / 4,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, // type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\tvar stripeTexture = textures[name + '_stripe'];\n\t\t\t\tvar uploadStripe = !stripeTexture || formatUpdate;\n\t\t\t\tif (uploadStripe) {\n\t\t\t\t\tstripeTexture = createOrReuseTexture(name + '_stripe', formatUpdate);\n\t\t\t\t}\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, stripeTexture);\n\t\t\t\tif (uploadStripe) {\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\t1,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tbuildStripe(width, 1) // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tif (create) {\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\t\tgl.texImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\tgl.ALPHA, // internal format\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\t0, // border\n\t\t\t\t\t\tgl.ALPHA, // format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texSubImage2D(\n\t\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t\t0, // mip level\n\t\t\t\t\t\t0, // x\n\t\t\t\t\t\t0, // y\n\t\t\t\t\t\twidth,\n\t\t\t\t\t\theight,\n\t\t\t\t\t\tgl.ALPHA, // internal format\n\t\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\t\tdata // data!\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction unpackTexture(name, formatUpdate, width, height) {\n\t\t\tvar texture = textures[name];\n\n\t\t\t// Upload to a temporary RGBA texture, then unpack it.\n\t\t\t// This is faster than CPU-side swizzling in ANGLE on Windows.\n\t\t\tgl.useProgram(unpackProgram);\n\n\t\t\tvar fb = framebuffers[name];\n\t\t\tif (!fb || formatUpdate) {\n\t\t\t\t// Create a framebuffer and an empty target size\n\t\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\t\t\t\tgl.texImage2D(\n\t\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t\t0, // mip level\n\t\t\t\t\tgl.RGBA, // internal format\n\t\t\t\t\twidth,\n\t\t\t\t\theight,\n\t\t\t\t\t0, // border\n\t\t\t\t\tgl.RGBA, // format\n\t\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\t\tnull // data!\n\t\t\t\t);\n\n\t\t\t\tfb = framebuffers[name] = gl.createFramebuffer();\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, fb);\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n\t\t\tvar tempTexture = textures[name + '_temp'];\n\t\t\tgl.activeTexture(gl.TEXTURE1);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, tempTexture);\n\t\t\tgl.uniform1i(unpackTextureLocation, 1);\n\n\t\t\tvar stripeTexture = textures[name + '_stripe'];\n\t\t\tgl.activeTexture(gl.TEXTURE2);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, stripeTexture);\n\t\t\tgl.uniform1i(stripeLocation, 2);\n\n\t\t\t// Rectangle geometry\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.enableVertexAttribArray(positionLocation);\n\t\t\tgl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Set up the texture geometry...\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, unpackTexturePositionBuffer);\n\t\t\tgl.enableVertexAttribArray(unpackTexturePositionLocation);\n\t\t\tgl.vertexAttribPointer(unpackTexturePositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Draw into the target texture...\n\t\t\tgl.viewport(0, 0, width, height);\n\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, rectangle.length / 2);\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t}\n\n\t\tfunction attachTexture(name, register, index) {\n\t\t\tgl.activeTexture(register);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, textures[name]);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n\n\t\t\tgl.uniform1i(gl.getUniformLocation(program, name), index);\n\t\t}\n\n\t\tfunction buildStripe(width) {\n\t\t\tif (stripes[width]) {\n\t\t\t\treturn stripes[width];\n\t\t\t}\n\t\t\tvar len = width,\n\t\t\t\tout = new Uint32Array(len);\n\t\t\tfor (var i = 0; i < len; i += 4) {\n\t\t\t\tout[i    ] = 0x000000ff;\n\t\t\t\tout[i + 1] = 0x0000ff00;\n\t\t\t\tout[i + 2] = 0x00ff0000;\n\t\t\t\tout[i + 3] = 0xff000000;\n\t\t\t}\n\t\t\treturn stripes[width] = new Uint8Array(out.buffer);\n\t\t}\n\n\t\tfunction initProgram(vertexShaderSource, fragmentShaderSource) {\n\t\t\tvar vertexShader = compileShader(gl.VERTEX_SHADER, vertexShaderSource);\n\t\t\tvar fragmentShader = compileShader(gl.FRAGMENT_SHADER, fragmentShaderSource);\n\n\t\t\tvar program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertexShader);\n\t\t\tgl.attachShader(program, fragmentShader);\n\n\t\t\tgl.linkProgram(program);\n\t\t\tif (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n\t\t\t\tvar err = gl.getProgramInfoLog(program);\n\t\t\t\tgl.deleteProgram(program);\n\t\t\t\tthrow new Error('GL program linking failed: ' + err);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction init() {\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\tunpackProgram = initProgram(shaders.vertexStripe, shaders.fragmentStripe);\n\t\t\t\tunpackPositionLocation = gl.getAttribLocation(unpackProgram, 'aPosition');\n\n\t\t\t\tunpackTexturePositionBuffer = gl.createBuffer();\n\t\t\t\tvar textureRectangle = new Float32Array([\n\t\t\t\t\t0, 0,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t0, 1,\n\t\t\t\t\t1, 0,\n\t\t\t\t\t1, 1\n\t\t\t\t]);\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, unpackTexturePositionBuffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, textureRectangle, gl.STATIC_DRAW);\n\n\t\t\t\tunpackTexturePositionLocation = gl.getAttribLocation(unpackProgram, 'aTexturePosition');\n\t\t\t\tstripeLocation = gl.getUniformLocation(unpackProgram, 'uStripe');\n\t\t\t\tunpackTextureLocation = gl.getUniformLocation(unpackProgram, 'uTexture');\n\t\t\t}\n\t\t\tprogram = initProgram(shaders.vertex, shaders.fragment);\n\n\t\t\tbuf = gl.createBuffer();\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.bufferData(gl.ARRAY_BUFFER, rectangle, gl.STATIC_DRAW);\n\n\t\t\tpositionLocation = gl.getAttribLocation(program, 'aPosition');\n\t\t\tlumaPositionBuffer = gl.createBuffer();\n\t\t\tlumaPositionLocation = gl.getAttribLocation(program, 'aLumaPosition');\n\t\t\tchromaPositionBuffer = gl.createBuffer();\n\t\t\tchromaPositionLocation = gl.getAttribLocation(program, 'aChromaPosition');\n\t\t}\n\n\t\t/**\n\t\t * Actually draw a frame.\n\t\t * @param {YUVFrame} buffer - YUV frame buffer object\n\t\t */\n\t\tself.drawFrame = function(buffer) {\n\t\t\tvar format = buffer.format;\n\n\t\t\tvar formatUpdate = (!program || canvas.width !== format.displayWidth || canvas.height !== format.displayHeight);\n\t\t\tif (formatUpdate) {\n\t\t\t\t// Keep the canvas at the right size...\n\t\t\t\tcanvas.width = format.displayWidth;\n\t\t\t\tcanvas.height = format.displayHeight;\n\t\t\t\tself.clear();\n\t\t\t}\n\n\t\t\tif (!program) {\n\t\t\t\tinit();\n\t\t\t}\n\n\t\t\tif (formatUpdate) {\n\t\t\t\tvar setupTexturePosition = function(buffer, location, texWidth) {\n\t\t\t\t\t// Warning: assumes that the stride for Cb and Cr is the same size in output pixels\n\t\t\t\t\tvar textureX0 = format.cropLeft / texWidth;\n\t\t\t\t\tvar textureX1 = (format.cropLeft + format.cropWidth) / texWidth;\n\t\t\t\t\tvar textureY0 = (format.cropTop + format.cropHeight) / format.height;\n\t\t\t\t\tvar textureY1 = format.cropTop / format.height;\n\t\t\t\t\tvar textureRectangle = new Float32Array([\n\t\t\t\t\t\ttextureX0, textureY0,\n\t\t\t\t\t\ttextureX1, textureY0,\n\t\t\t\t\t\ttextureX0, textureY1,\n\t\t\t\t\t\ttextureX0, textureY1,\n\t\t\t\t\t\ttextureX1, textureY0,\n\t\t\t\t\t\ttextureX1, textureY1\n\t\t\t\t\t]);\n\n\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, textureRectangle, gl.STATIC_DRAW);\n\t\t\t\t};\n\t\t\t\tsetupTexturePosition(\n\t\t\t\t\tlumaPositionBuffer,\n\t\t\t\t\tlumaPositionLocation,\n\t\t\t\t\tbuffer.y.stride);\n\t\t\t\tsetupTexturePosition(\n\t\t\t\t\tchromaPositionBuffer,\n\t\t\t\t\tchromaPositionLocation,\n\t\t\t\t\tbuffer.u.stride * format.width / format.chromaWidth);\n\t\t\t}\n\n\t\t\t// Create or update the textures...\n\t\t\tuploadTexture('uTextureY', formatUpdate, buffer.y.stride, format.height, buffer.y.bytes);\n\t\t\tuploadTexture('uTextureCb', formatUpdate, buffer.u.stride, format.chromaHeight, buffer.u.bytes);\n\t\t\tuploadTexture('uTextureCr', formatUpdate, buffer.v.stride, format.chromaHeight, buffer.v.bytes);\n\n\t\t\tif (WebGLFrameSink.stripe) {\n\t\t\t\t// Unpack the textures after upload to avoid blocking on GPU\n\t\t\t\tunpackTexture('uTextureY', formatUpdate, buffer.y.stride, format.height);\n\t\t\t\tunpackTexture('uTextureCb', formatUpdate, buffer.u.stride, format.chromaHeight);\n\t\t\t\tunpackTexture('uTextureCr', formatUpdate, buffer.v.stride, format.chromaHeight);\n\t\t\t}\n\n\t\t\t// Set up the rectangle and draw it\n\t\t\tgl.useProgram(program);\n\t\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\n\t\t\tattachTexture('uTextureY', gl.TEXTURE0, 0);\n\t\t\tattachTexture('uTextureCb', gl.TEXTURE1, 1);\n\t\t\tattachTexture('uTextureCr', gl.TEXTURE2, 2);\n\n\t\t\t// Set up geometry\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buf);\n\t\t\tgl.enableVertexAttribArray(positionLocation);\n\t\t\tgl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Set up the texture geometry...\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, lumaPositionBuffer);\n\t\t\tgl.enableVertexAttribArray(lumaPositionLocation);\n\t\t\tgl.vertexAttribPointer(lumaPositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, chromaPositionBuffer);\n\t\t\tgl.enableVertexAttribArray(chromaPositionLocation);\n\t\t\tgl.vertexAttribPointer(chromaPositionLocation, 2, gl.FLOAT, false, 0, 0);\n\n\t\t\t// Aaaaand draw stuff.\n\t\t\tgl.drawArrays(gl.TRIANGLES, 0, rectangle.length / 2);\n\t\t};\n\n\t\tself.clear = function() {\n\t\t\tgl.viewport(0, 0, canvas.width, canvas.height);\n\t\t\tgl.clearColor(0.0, 0.0, 0.0, 0.0);\n\t\t\tgl.clear(gl.COLOR_BUFFER_BIT);\n\t\t};\n\n\t\tself.clear();\n\n\t\treturn self;\n\t}\n\n\t// Optional performance hack for Windows; luminance and alpha textures are\n\t// ssllooww to upload on some machines, so we pack into RGBA and unpack in\n\t// the shaders.\n\t//\n\t// Some browsers / GPUs seem to have no problem with this, others have\n\t// a huge impact in CPU doing the texture uploads.\n\t//\n\t// For instance on macOS 12.2 on a MacBook Pro 2018 with AMD GPU it\n\t// can real down at high res. This is partially compensated for by\n\t// improving the upload-vs-update behavior for the alpha textures.\n\t//\n\t// Currently keeping it off as of April 2022, but leaving it in so it\n\t// can be enabled if desired.\n\tWebGLFrameSink.stripe = false;\n\n\tWebGLFrameSink.contextForCanvas = function(canvas) {\n\t\tvar options = {\n\t\t\t// Don't trigger discrete GPU in multi-GPU systems\n\t\t\tpreferLowPowerToHighPerformance: true,\n\t\t\tpowerPreference: 'low-power',\n\t\t\t// Don't try to use software GL rendering!\n\t\t\tfailIfMajorPerformanceCaveat: true,\n\t\t\t// In case we need to capture the resulting output.\n\t\t\tpreserveDrawingBuffer: true\n\t\t};\n\t\treturn canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options);\n\t};\n\n\t/**\n\t * Static function to check if WebGL will be available with appropriate features.\n\t *\n\t * @returns {boolean} - true if available\n\t */\n\tWebGLFrameSink.isAvailable = function() {\n\t\tvar canvas = document.createElement('canvas'),\n\t\t\tgl;\n\t\tcanvas.width = 1;\n\t\tcanvas.height = 1;\n\t\ttry {\n\t\t\tgl = WebGLFrameSink.contextForCanvas(canvas);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t\tif (gl) {\n\t\t\tvar register = gl.TEXTURE0,\n\t\t\t\twidth = 4,\n\t\t\t\theight = 4,\n\t\t\t\ttexture = gl.createTexture(),\n\t\t\t\tdata = new Uint8Array(width * height),\n\t\t\t\ttexWidth = WebGLFrameSink.stripe ? (width / 4) : width,\n\t\t\t\tformat = WebGLFrameSink.stripe ? gl.RGBA : gl.ALPHA,\n\t\t\t\tfilter = WebGLFrameSink.stripe ? gl.NEAREST : gl.LINEAR;\n\n\t\t\tgl.activeTexture(register);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n\t\t\tgl.texImage2D(\n\t\t\t\tgl.TEXTURE_2D,\n\t\t\t\t0, // mip level\n\t\t\t\tformat, // internal format\n\t\t\t\ttexWidth,\n\t\t\t\theight,\n\t\t\t\t0, // border\n\t\t\t\tformat, // format\n\t\t\t\tgl.UNSIGNED_BYTE, //type\n\t\t\t\tdata // data!\n\t\t\t);\n\n\t\t\tvar err = gl.getError();\n\t\t\tif (err) {\n\t\t\t\t// Doesn't support alpha textures?\n\t\t\t\treturn false;\n\t\t\t} else {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tWebGLFrameSink.prototype = Object.create(FrameSink.prototype);\n\n\tmodule.exports = WebGLFrameSink;\n})();\n","module.exports = {\n  vertex: \"precision mediump float;\\n\\nattribute vec2 aPosition;\\nattribute vec2 aLumaPosition;\\nattribute vec2 aChromaPosition;\\nvarying vec2 vLumaPosition;\\nvarying vec2 vChromaPosition;\\nvoid main() {\\n    gl_Position = vec4(aPosition, 0, 1);\\n    vLumaPosition = aLumaPosition;\\n    vChromaPosition = aChromaPosition;\\n}\\n\",\n  fragment: \"// inspired by https://github.com/mbebenita/Broadway/blob/master/Player/canvas.js\\n\\nprecision mediump float;\\n\\nuniform sampler2D uTextureY;\\nuniform sampler2D uTextureCb;\\nuniform sampler2D uTextureCr;\\nvarying vec2 vLumaPosition;\\nvarying vec2 vChromaPosition;\\nvoid main() {\\n   // Y, Cb, and Cr planes are uploaded as ALPHA textures.\\n   float fY = texture2D(uTextureY, vLumaPosition).w;\\n   float fCb = texture2D(uTextureCb, vChromaPosition).w;\\n   float fCr = texture2D(uTextureCr, vChromaPosition).w;\\n\\n   // Premultipy the Y...\\n   float fYmul = fY * 1.1643828125;\\n\\n   // And convert that to RGB!\\n   gl_FragColor = vec4(\\n     fYmul + 1.59602734375 * fCr - 0.87078515625,\\n     fYmul - 0.39176171875 * fCb - 0.81296875 * fCr + 0.52959375,\\n     fYmul + 2.017234375   * fCb - 1.081390625,\\n     1\\n   );\\n}\\n\",\n  vertexStripe: \"precision mediump float;\\n\\nattribute vec2 aPosition;\\nattribute vec2 aTexturePosition;\\nvarying vec2 vTexturePosition;\\n\\nvoid main() {\\n    gl_Position = vec4(aPosition, 0, 1);\\n    vTexturePosition = aTexturePosition;\\n}\\n\",\n  fragmentStripe: \"// extra 'stripe' texture fiddling to work around IE 11's poor performance on gl.LUMINANCE and gl.ALPHA textures\\n\\nprecision mediump float;\\n\\nuniform sampler2D uStripe;\\nuniform sampler2D uTexture;\\nvarying vec2 vTexturePosition;\\nvoid main() {\\n   // Y, Cb, and Cr planes are mapped into a pseudo-RGBA texture\\n   // so we can upload them without expanding the bytes on IE 11\\n   // which doesn't allow LUMINANCE or ALPHA textures\\n   // The stripe textures mark which channel to keep for each pixel.\\n   // Each texture extraction will contain the relevant value in one\\n   // channel only.\\n\\n   float fLuminance = dot(\\n      texture2D(uStripe, vTexturePosition),\\n      texture2D(uTexture, vTexturePosition)\\n   );\\n\\n   gl_FragColor = vec4(0, 0, 0, fLuminance);\\n}\\n\"\n};\n","import { PromiseResolver } from \"@yume-chan/async\";\nimport { StickyEventEmitter } from \"@yume-chan/event\";\nimport { AndroidAvcLevel, AndroidAvcProfile, h264ParseConfiguration, } from \"@yume-chan/scrcpy\";\nimport { WritableStream } from \"@yume-chan/stream-extra\";\nimport YuvBuffer from \"yuv-buffer\";\nimport YuvCanvas from \"yuv-canvas\";\nimport { createTinyH264Wrapper } from \"./wrapper.js\";\nconst noop = () => {\n    // no-op\n};\nexport function createCanvas() {\n    if (typeof document !== \"undefined\") {\n        return document.createElement(\"canvas\");\n    }\n    if (typeof OffscreenCanvas !== \"undefined\") {\n        return new OffscreenCanvas(1, 1);\n    }\n    throw new Error(\"no canvas input found nor any canvas can be created\");\n}\nexport class TinyH264Decoder {\n    static capabilities = {\n        h264: {\n            maxProfile: AndroidAvcProfile.Baseline,\n            maxLevel: AndroidAvcLevel.Level4,\n        },\n    };\n    #renderer;\n    get renderer() {\n        return this.#renderer;\n    }\n    #sizeChanged = new StickyEventEmitter();\n    get sizeChanged() {\n        return this.#sizeChanged.event;\n    }\n    #width = 0;\n    get width() {\n        return this.#width;\n    }\n    #height = 0;\n    get height() {\n        return this.#height;\n    }\n    #frameRendered = 0;\n    get framesRendered() {\n        return this.#frameRendered;\n    }\n    #frameSkipped = 0;\n    get framesSkipped() {\n        return this.#frameSkipped;\n    }\n    #writable;\n    get writable() {\n        return this.#writable;\n    }\n    #yuvCanvas;\n    #initializer;\n    constructor({ canvas } = {}) {\n        if (canvas) {\n            this.#renderer = canvas;\n        }\n        else {\n            this.#renderer = createCanvas();\n        }\n        this.#writable = new WritableStream({\n            write: async (packet) => {\n                switch (packet.type) {\n                    case \"configuration\":\n                        await this.#configure(packet.data);\n                        break;\n                    case \"data\": {\n                        if (!this.#initializer) {\n                            throw new Error(\"Decoder not configured\");\n                        }\n                        const wrapper = await this.#initializer.promise;\n                        wrapper.feed(packet.data.slice().buffer);\n                        break;\n                    }\n                }\n            },\n        });\n    }\n    async #configure(data) {\n        this.dispose();\n        this.#initializer = new PromiseResolver();\n        if (!this.#yuvCanvas) {\n            // yuv-canvas detects WebGL support by creating a <canvas> itself\n            // not working in worker\n            const canvas = createCanvas();\n            const attributes = {\n                // Disallow software rendering.\n                // Other rendering methods are faster than software-based WebGL.\n                failIfMajorPerformanceCaveat: true,\n            };\n            const gl = canvas.getContext(\"webgl2\", attributes) ||\n                canvas.getContext(\"webgl\", attributes);\n            this.#yuvCanvas = YuvCanvas.attach(this.#renderer, {\n                webGL: !!gl,\n            });\n        }\n        const { encodedWidth, encodedHeight, croppedWidth, croppedHeight, cropLeft, cropTop, } = h264ParseConfiguration(data);\n        this.#width = croppedWidth;\n        this.#height = croppedHeight;\n        this.#sizeChanged.fire({\n            width: croppedWidth,\n            height: croppedHeight,\n        });\n        // H.264 Baseline profile only supports YUV 420 pixel format\n        // So chroma width/height is each half of video width/height\n        const chromaWidth = encodedWidth / 2;\n        const chromaHeight = encodedHeight / 2;\n        // YUVCanvas will set canvas size when format changes\n        const format = YuvBuffer.format({\n            width: encodedWidth,\n            height: encodedHeight,\n            chromaWidth,\n            chromaHeight,\n            cropLeft: cropLeft,\n            cropTop: cropTop,\n            cropWidth: croppedWidth,\n            cropHeight: croppedHeight,\n            displayWidth: croppedWidth,\n            displayHeight: croppedHeight,\n        });\n        const wrapper = await createTinyH264Wrapper();\n        this.#initializer.resolve(wrapper);\n        const uPlaneOffset = encodedWidth * encodedHeight;\n        const vPlaneOffset = uPlaneOffset + chromaWidth * chromaHeight;\n        wrapper.onPictureReady(({ data }) => {\n            this.#frameRendered += 1;\n            const array = new Uint8Array(data);\n            const frame = YuvBuffer.frame(format, YuvBuffer.lumaPlane(format, array, encodedWidth, 0), YuvBuffer.chromaPlane(format, array, chromaWidth, uPlaneOffset), YuvBuffer.chromaPlane(format, array, chromaWidth, vPlaneOffset));\n            this.#yuvCanvas.drawFrame(frame);\n        });\n        wrapper.feed(data.slice().buffer);\n    }\n    dispose() {\n        this.#initializer?.promise\n            .then((wrapper) => wrapper.dispose())\n            // NOOP: It's disposed so nobody cares about the error\n            .catch(noop);\n        this.#initializer = undefined;\n    }\n}\n//# sourceMappingURL=decoder.js.map","import { createCanvas } from \"@yume-chan/scrcpy-decoder-tinyh264\";\nexport class CanvasVideoFrameRenderer {\n    #canvas;\n    get canvas() {\n        return this.#canvas;\n    }\n    constructor(canvas) {\n        if (canvas) {\n            this.#canvas = canvas;\n        }\n        else {\n            this.#canvas = createCanvas();\n        }\n    }\n    setSize(width, height) {\n        if (this.#canvas.width !== width || this.#canvas.height !== height) {\n            this.#canvas.width = width;\n            this.#canvas.height = height;\n        }\n    }\n}\n//# sourceMappingURL=canvas.js.map","import { createCanvas } from \"@yume-chan/scrcpy-decoder-tinyh264\";\nimport { CanvasVideoFrameRenderer } from \"./canvas.js\";\nconst Resolved = Promise.resolve();\nfunction createContext(canvas, enableCapture) {\n    const attributes = {\n        // Low-power GPU should be enough for video rendering.\n        powerPreference: \"low-power\",\n        alpha: false,\n        // Disallow software rendering.\n        // Other rendering methods are faster than software-based WebGL.\n        failIfMajorPerformanceCaveat: true,\n        preserveDrawingBuffer: !!enableCapture,\n    };\n    return (canvas.getContext(\"webgl2\", attributes) ||\n        canvas.getContext(\"webgl\", attributes));\n}\nexport class WebGLVideoFrameRenderer extends CanvasVideoFrameRenderer {\n    static vertexShaderSource = `\n        attribute vec2 xy;\n\n        varying highp vec2 uv;\n\n        void main(void) {\n            gl_Position = vec4(xy, 0.0, 1.0);\n            // Map vertex coordinates (-1 to +1) to UV coordinates (0 to 1).\n            // UV coordinates are Y-flipped relative to vertex coordinates.\n            uv = vec2((1.0 + xy.x) / 2.0, (1.0 - xy.y) / 2.0);\n        }\n`;\n    static fragmentShaderSource = `\n        varying highp vec2 uv;\n\n        uniform sampler2D texture;\n\n        void main(void) {\n            gl_FragColor = texture2D(texture, uv);\n        }\n`;\n    static get isSupported() {\n        const canvas = createCanvas();\n        return !!createContext(canvas);\n    }\n    #context;\n    /**\n     * Create a new WebGL frame renderer.\n     * @param canvas The canvas to render frames to.\n     * @param enableCapture\n     * Whether to allow capturing the canvas content using APIs like `readPixels` and `toDataURL`.\n     * Enable this option may reduce performance.\n     */\n    constructor(canvas, enableCapture) {\n        super(canvas);\n        const gl = createContext(this.canvas, enableCapture);\n        if (!gl) {\n            throw new Error(\"WebGL not supported\");\n        }\n        this.#context = gl;\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, WebGLVideoFrameRenderer.vertexShaderSource);\n        gl.compileShader(vertexShader);\n        if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(vertexShader));\n        }\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, WebGLVideoFrameRenderer.fragmentShaderSource);\n        gl.compileShader(fragmentShader);\n        if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n            throw new Error(gl.getShaderInfoLog(fragmentShader));\n        }\n        const shaderProgram = gl.createProgram();\n        gl.attachShader(shaderProgram, vertexShader);\n        gl.attachShader(shaderProgram, fragmentShader);\n        gl.linkProgram(shaderProgram);\n        if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\n            throw new Error(gl.getProgramInfoLog(shaderProgram));\n        }\n        gl.useProgram(shaderProgram);\n        // Vertex coordinates, clockwise from bottom-left.\n        const vertexBuffer = gl.createBuffer();\n        gl.bindBuffer(gl.ARRAY_BUFFER, vertexBuffer);\n        gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([-1.0, -1.0, -1.0, +1.0, +1.0, +1.0, +1.0, -1.0]), gl.STATIC_DRAW);\n        const xyLocation = gl.getAttribLocation(shaderProgram, \"xy\");\n        gl.vertexAttribPointer(xyLocation, 2, gl.FLOAT, false, 0, 0);\n        gl.enableVertexAttribArray(xyLocation);\n        // Create one texture to upload frames to.\n        const texture = gl.createTexture();\n        gl.bindTexture(gl.TEXTURE_2D, texture);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    }\n    draw(frame) {\n        const gl = this.#context;\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, frame);\n        gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n        gl.drawArrays(gl.TRIANGLE_FAN, 0, 4);\n        return Resolved;\n    }\n}\n//# sourceMappingURL=webgl.js.map","/*\n * Copyright (c) 2025 michioxd\n * Released under MIT license. See LICENSE for more details.\n * Repository: https://github.com/michioxd/nyaadenwa\n */\n\nimport type { ScrcpyVideoCodecId, ScrcpyMediaStreamPacket } from \"@yume-chan/scrcpy\";\nimport { WebGLVideoFrameRenderer, WebCodecsVideoDecoder } from \"@yume-chan/scrcpy-decoder-webcodecs\";\n\nself.addEventListener(\"message\", async (e) => {\n    const { codec, canvas, stream } = e.data as {\n        codec: ScrcpyVideoCodecId;\n        canvas: OffscreenCanvas;\n        stream: ReadableStream<ScrcpyMediaStreamPacket>;\n    };\n\n    const renderer = new WebGLVideoFrameRenderer(canvas);\n    const decoder = new WebCodecsVideoDecoder({ codec, renderer });\n\n    decoder.sizeChanged(({ width, height }) => {\n        postMessage({ width, height });\n    });\n\n    try {\n        await stream.pipeTo(decoder.writable);\n    } catch (e) {\n        console.error(\"Stream pipe error:\", e);\n        postMessage({ error: e instanceof Error ? e.message : \"Unknown error occurred\" });\n    }\n});\n"],"names":["getUint32LittleEndian","buffer","offset","ScrcpyVideoCodecId","WritableStream","globalThis","BitReader","data","byte","bytePosition","bitPosition","byteAligned","this","ended","length","constructor","f1","value","f","n","skip","bytes","readBytes","Error","subarray","getPosition","setPosition","ObuType","SequenceHeader","TemporalDelimiter","FrameHeader","TileGroup","Metadata","Frame","RedundantFrameHeader","TileList","Padding","ColorPrimaries","Bt709","Unspecified","Bt470M","Bt470BG","Bt601","Smpte240","GenericFilm","Bt2020","Xyz","Smpte431","Smpte432","Ebu3213","TransferCharacteristics","Linear","Log100","Log100Sqrt10","Iec61966","Bt1361","Srgb","Bt2020Ten","Bt2020Twelve","Smpte2084","Smpte428","Hlg","MatrixCoefficients","Identity","Fcc","YCgCo","Bt2020Ncl","Bt2020Cl","Smpte2085","ChromatNcl","ChromatCl","ICtCp","Av1","static","Leb128Bytes","uvlc","leadingZeros","leb128","i","leb128_byte","BigInt","annexBBitstream","temporal_unit_size","temporalUnit","sz","frame_unit_size","frameUnit","obu_length","obu","openBitstreamUnit","OperatingPointIdc","obu_header","obuHeader","obu_size","obu_has_size_field","obu_extension_flag","startPosition","obu_type","obu_extension_header","inTemporalLayer","temporal_id","inSpatialLayer","spatial_id","Number","sequence_header_obu","sequenceHeaderObu","currentPosition","payloadBits","obuExtensionHeader","seq_profile","still_picture","reduced_still_picture_header","timing_info","decoder_model_info","timing_info_present_flag","decoder_model_info_present_flag","initial_display_delay_present_flag","operating_points_cnt_minus_1","operating_point_idc","seq_level_idx","seq_tier","decoder_model_present_for_this_op","initial_display_delay_present_for_this_op","operating_parameters_info","initial_display_delay_minus_1","timingInfo","decoderModelInfo","operatingParametersInfo","operatingPoint","chooseOperatingPoint","frame_width_bits_minus_1","frame_height_bits_minus_1","max_frame_width_minus_1","max_frame_height_minus_1","delta_frame_id_length_minus_2","additional_frame_id_length_minus_1","frame_id_numbers_present_flag","use_128x128_superblock","enable_filter_intra","enable_intra_edge_filter","order_hint_bits_minus_1","enable_interintra_compound","enable_masked_compound","enable_warped_motion","enable_dual_filter","enable_order_hint","enable_jnt_comp","enable_ref_frame_mvs","seq_choose_screen_content_tools","seq_force_screen_content_tools","SelectScreenContentTools","seq_choose_integer_mv","seq_force_integer_mv","SelectIntegerMv","enable_superres","enable_cdef","enable_restoration","color_config","colorConfig","film_grain_params_present","searchSequenceHeaderObu","num_units_in_display_tick","time_scale","equal_picture_interval","num_ticks_per_picture_minus_1","buffer_delay_length_minus_1","num_units_in_decoding_tick","buffer_removal_time_length_minus_1","frame_presentation_time_length_minus_1","decoder_buffer_delay","encoder_buffer_delay","low_delay_mode_flag","high_bitdepth","twelve_bit","BitDepth","mono_chrome","color_description_present_flag","color_primaries","transfer_characteristics","matrix_coefficients","subsampling_x","subsampling_y","color_range","chroma_sample_position","separate_uv_delta_q","annexBSplitNalu","start","zeroCount","inEmulation","prevZeroCount","NaluSodbBitReader","nalu","byteLength","stopBitIndex","j","loadByte","next","read","result","checkSkipPosition","decodeExponentialGolombNumber","save","restore","state","peek","Uint8Array","peekBytes","h264ParseConfiguration","sequenceParameterSet","pictureParameterSet","h264SearchConfiguration","profile_idc","profileIndex","constraint_set","constraintSet","level_idc","levelIndex","pic_width_in_mbs_minus1","pic_height_in_map_units_minus1","frame_mbs_only_flag","frame_crop_left_offset","frame_crop_right_offset","frame_crop_top_offset","frame_crop_bottom_offset","reader","nal_ref_idc","constraint_set0_flag","constraint_set1_flag","constraint_set2_flag","constraint_set3_flag","constraint_set4_flag","constraint_set5_flag","seq_parameter_set_id","chroma_format_idc","pic_order_cnt_type","num_ref_frames_in_pic_order_cnt_cycle","frame_cropping_flag","h264ParseSequenceParameterSet","encodedWidth","encodedHeight","cropLeft","cropRight","cropTop","cropBottom","croppedWidth","croppedHeight","h265ParseNaluHeader","nal_unit_type","nuh_layer_id","nuh_temporal_id_plus1","h265ParseSequenceParameterSet","sps_video_parameter_set_id","sps_max_sub_layers_minus1","sps_temporal_id_nesting_flag","profileTierLevel","h265ParseProfileTierLevel","sps_seq_parameter_set_id","separate_colour_plane_flag","pic_width_in_luma_samples","pic_height_in_luma_samples","conformance_window_flag","conf_win_left_offset","conf_win_right_offset","conf_win_top_offset","conf_win_bottom_offset","bit_depth_luma_minus8","bit_depth_chroma_minus8","log2_max_pic_order_cnt_lsb_minus4","sps_max_dec_pic_buffering_minus1","sps_max_num_reorder_pics","sps_max_latency_increase_plus1","sps_sub_layer_ordering_info_present_flag","log2_min_luma_coding_block_size_minus3","log2_diff_max_min_luma_coding_block_size","log2_min_luma_transform_block_size_minus2","log2_diff_max_min_luma_transform_block_size","max_transform_hierarchy_depth_inter","max_transform_hierarchy_depth_intra","scaling_list_enabled_flag","sps_scaling_list_data_present_flag","scalingListData","scaling_list","sizeId","matrixId","nextCoef","coefNum","Math","min","h265ParseScalingListData","amp_enabled_flag","sample_adaptive_offset_enabled_flag","pcm_enabled_flag","pcm_sample_bit_depth_luma_minus1","pcm_sample_bit_depth_chroma_minus1","log2_min_pcm_luma_coding_block_size_minus3","log2_diff_max_min_pcm_luma_coding_block_size","pcm_loop_filter_disabled_flag","num_short_term_ref_pic_sets","shortTermRefPicSets","h265ParseShortTermReferencePictureSet","long_term_ref_pics_present_flag","num_long_term_ref_pics_sps","lt_ref_pic_poc_lsb_sps","used_by_curr_pic_lt_sps_flag","sps_temporal_mvp_enabled_flag","strong_intra_smoothing_enabled_flag","vui_parameters_present_flag","vuiParameters","aspect_ratio_info_present_flag","aspect_ratio_idc","sar_width","sar_height","H265AspectRatioIndicator","Extended","overscan_info_present_flag","overscan_appropriate_flag","video_signal_type_present_flag","video_format","video_full_range_flag","colour_description_present_flag","colour_primaries","matrix_coeffs","chroma_loc_info_present_flag","chroma_sample_loc_type_top_field","chroma_sample_loc_type_bottom_field","neutral_chroma_indication_flag","field_seq_flag","frame_field_info_present_flag","default_display_window_flag","def_disp_win_left_offset","def_disp_win_right_offset","def_disp_win_top_offset","def_disp_win_bottom_offset","vui_timing_info_present_flag","vui_num_units_in_tick","vui_time_scale","vui_poc_proportional_to_timing_flag","vui_num_ticks_poc_diff_one_minus1","vui_hrd_parameters_present_flag","vui_hrd_parameters","h265ParseHrdParameters","bitstream_restriction_flag","tiles_fixed_structure_flag","motion_vectors_over_pic_boundaries_flag","restricted_ref_pic_lists_flag","min_spatial_segmentation_idc","max_bytes_per_pic_denom","max_bits_per_min_cu_denom","log2_max_mv_length_horizontal","log2_max_mv_length_vertical","h265ParseVuiParameters","sps_extension_present_flag","sps_range_extension_flag","sps_multilayer_extension_flag","sps_3d_extension_flag","sps_scc_extension_flag","sps_extension_4bits","spsMultilayerExtension","sps3dExtension","sps_extension_data_flag","inter_view_mv_vert_constraint_flag","h265ParseSpsMultilayerExtension","iv_di_mc_enabled_flag","iv_mv_scal_enabled_flag","log2_ivmc_sub_pb_size_minus3","iv_res_pred_enabled_flag","depth_ref_enabled_flag","vsp_mc_enabled_flag","dbbp_enabled_flag","tex_mc_enabled_flag","log2_texmc_sub_pb_size_minus3","intra_contour_enabled_flag","intra_dc_only_wedge_enabled_flag","cqt_cu_part_pred_enabled_flag","inter_dc_only_enabled_flag","skip_intra_enabled_flag","h265ParseSps3dExtension","h265ParseProfileTier","profile_space","tier_flag","profileCompatibilitySet","profile_compatibility_flag","progressive_source_flag","interlaced_source_flag","non_packed_constraint_flag","frame_only_constraint_flag","max_12bit_constraint_flag","max_10bit_constraint_flag","max_8bit_constraint_flag","max_422chroma_constraint_flag","max_420chroma_constraint_flag","max_monochrome_constraint_flag","intra_constraint_flag","one_picture_only_constraint_flag","lower_bit_rate_constraint_flag","max_14bit_constraint_flag","inbld_flag","profilePresentFlag","maxNumSubLayersMinus1","generalProfileTier","general_level_idc","sub_layer_profile_present_flag","sub_layer_level_present_flag","subLayerProfileTier","sub_layer_level_idc","stRpsIdx","sets","inter_ref_pic_set_prediction_flag","delta_idx_minus1","delta_rps_sign","abs_delta_rps_minus1","used_by_curr_pic_flag","use_delta_flag","num_negative_pics","num_positive_pics","delta_poc_s0_minus1","used_by_curr_pic_s0_flag","delta_poc_s1_minus1","used_by_curr_pic_s1_flag","RefRps","NumDeltaPocs_RefRpsIdx","DeltaRps","RefPocS0","RefPocS1","pocS0","pocS1","dPoc","prev","current","commonInfPresentFlag","nal_hrd_parameters_present_flag","vcl_hrd_parameters_present_flag","sub_pic_hrd_params_present_flag","tick_divisor_minus2","du_cpb_removal_delay_increment_length_minus1","sub_pic_cpb_params_in_pic_timing_sei_flag","dpb_output_delay_du_length_minus1","bit_rate_scale","cpb_size_scale","cpb_size_du_scale","initial_cpb_removal_delay_length_minus1","au_cpb_removal_delay_length_minus1","dpb_output_delay_length_minus1","fixed_pic_rate_general_flag","fixed_pic_rate_within_cvs_flag","elemental_duration_in_tc_minus1","low_delay_hrd_flag","cpb_cnt_minus1","nalHrdParameters","vclHrdParameters","h265ParseSubLayerHrdParameters","getCpbCnt","subLayerId","CpbCnt","bit_rate_value_minus1","cpb_size_value_minus1","cbr_flag","cpb_size_du_value_minus1","bit_rate_du_value_minus1","cpb_cnt_minus_1","h265ParseConfiguration","videoParameterSet","count","header","raw","rbsp","h265SearchConfiguration","generalProfileSpace","generalTierFlag","generalProfileIndex","generalProfileCompatibilitySet","generalConstraintSet","generalLevelIndex","vps_video_parameter_set_id","vps_base_layer_internal_flag","vps_base_layer_available_flag","vps_max_layers_minus1","vps_max_sub_layers_minus1","vps_temporal_id_nesting_flag","vps_sub_layer_ordering_info_present_flag","vps_max_dec_pic_buffering_minus1","vps_max_num_reorder_pics","vps_max_latency_increase_plus1","vps_max_layer_id","vps_num_layer_sets_minus1","layer_id_included_flag","vps_timing_info_present_flag","vps_num_units_in_tick","vps_time_scale","vps_poc_proportional_to_timing_flag","vps_num_ticks_poc_diff_one_minus1","vps_num_hrd_parameters","hrd_layer_set_idx","cprms_present_flag","hrdParameters","vps_extension_flag","h265ParseVideoParameterSet","SubWidthC","getSubWidthC","SubHeightC","getSubHeightC","hexDigits","toString","toUpperCase","hexTwoDigits","padStart","decimalTwoDigits","Av1Codec","decoder","updateSize","configure","sequenceHeader","seqProfile","seqLevelIdx","monoChrome","subsamplingX","subsamplingY","chromaSamplePosition","colorPrimaries","transferCharacteristics","matrixCoefficients","colorRange","width","height","codec","join","optimizeForLatency","decode","packet","type","EncodedVideoChunk","keyframe","timestamp","H26xDecoder","config","set","H264Decoder","super","H265Decoder","Array","from","codedWidth","codedHeight","EventEmitter","listeners","event","bind","addEventListener","info","push","remove","index","indexOf","splice","dispose","listener","thisArg","args","fire","e","slice","call","Undefined","Symbol","StickyEventEmitter","Pool","controller","readable","ReadableStream","pull","enqueue","initializer","highWaterMark","getReader","size","capacity","borrow","VideoFrameCapturer","canvas","context","OffscreenCanvas","document","createElement","getContext","alpha","capture","frame","displayWidth","displayHeight","bitmap","createImageBitmap","transferFromImageBitmap","convertToBlob","Promise","resolve","reject","toBlob","blob","VideoFrameCapturerPool","WebCodecsVideoDecoder","isSupported","VideoDecoder","h264","h265","av1","codecDecoder","writable","error","renderer","framesDraw","framesPresented","framesRendered","framesSkipped","sizeChanged","drawing","nextFrame","captureFrame","animationFrameId","output","close","clone","draw","setError","write","handleAnimationFrame","setSize","requestAnimationFrame","snapshot","capturer","return","cancelAnimationFrame","FrameSink","options","FrameSink$1","prototype","drawFrame","clear","FrameSinkModule","exports","depowerModule","ratio","shiftCount","depower","YCbCrModule","convertYCbCr","format","hdec","chromaWidth","vdec","chromaHeight","bytesY","y","bytesCb","u","bytesCr","v","strideY","stride","strideCb","strideCr","outStride","YPtr","Y0Ptr","Y1Ptr","CbPtr","CrPtr","outPtr","outPtr0","outPtr1","colorCb","colorCr","multY","multCrR","multCbCrG","multCbB","x","xdec","ydec","require$$0","YCbCr","require$$1","SoftwareFrameSink","self","ctx","imageData","resampleCanvas","resampleContext","createImageData","pixelCount","initImageData","drawContext","cropWidth","cropHeight","resample","putImageData","drawImage","clearRect","Object","create","SoftwareFrameSinkModule","WebGLFrameSink","YUVCanvas","shaders","vertex","fragment","vertexStripe","fragmentStripe","program","unpackProgram","gl","contextForCanvas","compileShader","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","err","getShaderInfoLog","deleteShader","buf","positionLocation","unpackTexturePositionBuffer","unpackTexturePositionLocation","stripeLocation","unpackTextureLocation","lumaPositionBuffer","lumaPositionLocation","chromaPositionBuffer","chromaPositionLocation","rectangle","Float32Array","textures","framebuffers","stripes","createOrReuseTexture","name","formatUpdate","createTexture","uploadTexture","texture","activeTexture","TEXTURE0","stripe","uploadTemp","tempTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","UNSIGNED_BYTE","texSubImage2D","stripeTexture","uploadStripe","len","out","Uint32Array","buildStripe","LINEAR","ALPHA","unpackTexture","useProgram","fb","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","TEXTURE1","uniform1i","TEXTURE2","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","viewport","drawArrays","TRIANGLES","attachTexture","register","getUniformLocation","initProgram","vertexShaderSource","fragmentShaderSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","getAttribLocation","createBuffer","textureRectangle","bufferData","STATIC_DRAW","init","setupTexturePosition","location","texWidth","textureX0","textureX1","textureY0","textureY1","clearColor","COLOR_BUFFER_BIT","WebGLFrameSink$1","preferLowPowerToHighPerformance","powerPreference","failIfMajorPerformanceCaveat","preserveDrawingBuffer","isAvailable","filter","getError","WebGLFrameSinkModule","createCanvas","require$$2","attach","webGL","yuvCanvasModule","CanvasVideoFrameRenderer","Resolved","createContext","enableCapture","attributes","WebGLVideoFrameRenderer","shaderProgram","vertexBuffer","xyLocation","drawingBufferWidth","drawingBufferHeight","TRIANGLE_FAN","async","stream","postMessage","pipeTo","console","message"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}