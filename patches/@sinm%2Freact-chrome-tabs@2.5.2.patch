diff --git a/node_modules/@sinm/react-chrome-tabs/.bun-tag-466b8370b55a78c b/.bun-tag-466b8370b55a78c
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/@sinm/react-chrome-tabs/.bun-tag-60b54a52d4775ddd b/.bun-tag-60b54a52d4775ddd
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/@sinm/react-chrome-tabs/.bun-tag-b5ac58868db71255 b/.bun-tag-b5ac58868db71255
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/@sinm/react-chrome-tabs/.bun-tag-b854b7f9b41f6231 b/.bun-tag-b854b7f9b41f6231
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/node_modules/@sinm/react-chrome-tabs/.bun-tag-cd653b478f2cdc1d b/.bun-tag-cd653b478f2cdc1d
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
diff --git a/dist/chrome-tabs.js b/dist/chrome-tabs.js
index f02aedcaf07ad7cca15d98101aed64519f3669ca..80cef5e25631c81e3725d8083a31bbf1710157c9 100644
--- a/dist/chrome-tabs.js
+++ b/dist/chrome-tabs.js
@@ -9,8 +9,8 @@ var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, ge
     });
 };
 var __generator = (this && this.__generator) || function (thisArg, body) {
-    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
-    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
+    var _ = { label: 0, sent: function () { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
+    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () { return this; }), g;
     function verb(n) { return function (v) { return step([n, v]); }; }
     function step(op) {
         if (f) throw new TypeError("Generator is already executing.");
@@ -61,7 +61,7 @@ var closest = function (value, array) {
     });
     return closestIndex;
 };
-var tabTemplate = "\n      <div class=\"chrome-tab\">\n        <div class=\"chrome-tab-dividers\"></div>\n        <div class=\"chrome-tab-background\">\n          <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"><defs><symbol id=\"chrome-tab-geometry-left\" viewBox=\"0 0 214 36\"><path d=\"M17 0h197v36H0v-2c4.5 0 9-3.5 9-8V8c0-4.5 3.5-8 8-8z\"/></symbol><symbol id=\"chrome-tab-geometry-right\" viewBox=\"0 0 214 36\"><use xlink:href=\"#chrome-tab-geometry-left\"/></symbol><clipPath id=\"crop\"><rect class=\"mask\" width=\"100%\" height=\"100%\" x=\"0\"/></clipPath></defs><svg width=\"52%\" height=\"100%\"><use xlink:href=\"#chrome-tab-geometry-left\" width=\"214\" height=\"36\" class=\"chrome-tab-geometry\"/></svg><g transform=\"scale(-1, 1)\"><svg width=\"52%\" height=\"100%\" x=\"-100%\" y=\"0\"><use xlink:href=\"#chrome-tab-geometry-right\" width=\"214\" height=\"36\" class=\"chrome-tab-geometry\"/></svg></g></svg>\n        </div>\n        <div class=\"chrome-tab-content\">\n          <div class=\"chrome-tab-favicon\"></div>\n          <div class=\"chrome-tab-title\"></div>\n          <div class=\"chrome-tab-drag-handle\"></div>\n          <div class=\"chrome-tab-close\"></div>\n        </div>\n      </div>\n    ";
+var tabTemplate = "\n<div class=\"tab\"><div class=\"tab-dividers\"></div><div class=\"tab-content\"><div class=\"tab-favicon\"></div><div class=\"tab-title\"></div><div class=\"tab-drag-handle\"></div><div class=\"tab-close\"></div>\n        </div>\n      </div>\n    ";
 var defaultTapProperties = {
     title: "New tab",
     favicon: false,
@@ -103,7 +103,7 @@ var ChromeTabs = /** @class */ (function () {
     ChromeTabs.prototype.init = function (el) {
         this.el = el;
         this.instanceId = instanceId;
-        this.el.setAttribute("data-chrome-tabs-instance-id", this.instanceId + "");
+        this.el.setAttribute("data-tabs-instance-id", this.instanceId + "");
         instanceId += 1;
         this.setupCustomProperties();
         this.setupStyleEl();
@@ -150,35 +150,37 @@ var ChromeTabs = /** @class */ (function () {
             }
             _this.tabContentEl.style.transform = "translateX(".concat(_this.translateX, "px)");
         });
-        this.el.addEventListener("activeTabChange", function (event) { return __awaiter(_this, void 0, void 0, function () {
-            return __generator(this, function (_a) {
-                switch (_a.label) {
-                    case 0: return [4 /*yield*/, this.layoutPromise];
-                    case 1:
-                        _a.sent(); // Wait for the layout to finish
-                        this.translateToView();
-                        return [2 /*return*/];
-                }
+        this.el.addEventListener("activeTabChange", function (event) {
+            return __awaiter(_this, void 0, void 0, function () {
+                return __generator(this, function (_a) {
+                    switch (_a.label) {
+                        case 0: return [4 /*yield*/, this.layoutPromise];
+                        case 1:
+                            _a.sent(); // Wait for the layout to finish
+                            this.translateToView();
+                            return [2 /*return*/];
+                    }
+                });
             });
-        }); });
+        });
     };
     Object.defineProperty(ChromeTabs.prototype, "tabEls", {
         get: function () {
-            return Array.prototype.slice.call(this.el.querySelectorAll(".chrome-tab"));
+            return Array.prototype.slice.call(this.el.querySelectorAll(".tab"));
         },
         enumerable: false,
         configurable: true
     });
     Object.defineProperty(ChromeTabs.prototype, "tabContentEl", {
         get: function () {
-            return this.el.querySelector(".chrome-tabs-content");
+            return this.el.querySelector(".tabs-content");
         },
         enumerable: false,
         configurable: true
     });
     Object.defineProperty(ChromeTabs.prototype, "toolbarEl", {
         get: function () {
-            return this.el.querySelector(".chrome-tabs-toolbar-right");
+            return this.el.querySelector(".tabs-toolbar-right");
         },
         enumerable: false,
         configurable: true
@@ -265,7 +267,7 @@ var ChromeTabs = /** @class */ (function () {
                         });
                         styleHTML = "";
                         this.tabPositions.forEach(function (position, i) {
-                            styleHTML += "\n              .chrome-tabs[data-chrome-tabs-instance-id=\"".concat(_this.instanceId, "\"] .chrome-tab:nth-child(").concat(i + 1, ") {\n                transform: translate3d(").concat(position, "px, 0, 0)\n              }\n            ");
+                            styleHTML += "    .tabs[data-tabs-instance-id=\"".concat(_this.instanceId, "\"] .tab:nth-child(").concat(i + 1, ") {      transform: translate3d(").concat(position, "px, 0, 0)    }  ");
                         });
                         this.styleEl.innerHTML = styleHTML;
                         return [4 /*yield*/, this.justifyContentWidth()];
@@ -282,7 +284,7 @@ var ChromeTabs = /** @class */ (function () {
     };
     ChromeTabs.prototype.getTabsWidth = function () {
         var contentWidths = this.tabEls.map(function (tabEl) {
-            return tabEl.querySelector(".chrome-tab-drag-handle").getBoundingClientRect()
+            return tabEl.querySelector(".tab-drag-handle").getBoundingClientRect()
                 .width;
         });
         var width = util_1.sum.apply(void 0, contentWidths);
@@ -347,20 +349,19 @@ var ChromeTabs = /** @class */ (function () {
             _this.emit("contextmenu", { tabEl: tabEl, event: event });
         };
         tabEl.addEventListener("mousedown", function () {
-            console.log("-- tabCLick");
             _this.emit("tabClick", { tabEl: tabEl });
         });
         if (animate) {
-            tabEl.classList.add("chrome-tab-was-just-added");
-            setTimeout(function () { return tabEl.classList.remove("chrome-tab-was-just-added"); }, 500);
+            tabEl.classList.add("tab-was-just-added");
+            setTimeout(function () { return tabEl.classList.remove("tab-was-just-added"); }, 500);
         }
         tabProperties = Object.assign({}, defaultTapProperties, tabProperties);
         var showCloseButton = tabProperties.isCloseIconVisible !== false;
         if (!showCloseButton) {
-            tabEl.classList.add("chrome-tab-no-close");
+            tabEl.classList.add("tab-no-close");
         }
         else {
-            tabEl.classList.remove("chrome-tab-no-close");
+            tabEl.classList.remove("tab-no-close");
         }
         this.tabContentEl.appendChild(tabEl);
         this.setTabCloseEventListener(tabEl);
@@ -375,7 +376,7 @@ var ChromeTabs = /** @class */ (function () {
     };
     ChromeTabs.prototype.setTabCloseEventListener = function (tabEl) {
         var _this = this;
-        tabEl.querySelector(".chrome-tab-close").addEventListener("click", function (_) {
+        tabEl.querySelector(".tab-close").addEventListener("click", function (_) {
             _.stopImmediatePropagation();
             // this.removeTab(tabEl);
             _this.emit("tabClose", { tabEl: tabEl });
@@ -383,7 +384,7 @@ var ChromeTabs = /** @class */ (function () {
     };
     Object.defineProperty(ChromeTabs.prototype, "activeTabEl", {
         get: function () {
-            return this.el.querySelector(".chrome-tab[active]");
+            return this.el.querySelector(".tab[active]");
         },
         enumerable: false,
         configurable: true
@@ -429,14 +430,14 @@ var ChromeTabs = /** @class */ (function () {
         this.setDraggable(this.draggable);
     };
     ChromeTabs.prototype.updateTab = function (tabEl, tabProperties) {
-        tabEl.querySelector(".chrome-tab-title").textContent = tabProperties.title;
-        var faviconEl = tabEl.querySelector(".chrome-tab-favicon");
+        tabEl.querySelector(".tab-title").textContent = tabProperties.title;
+        var faviconEl = tabEl.querySelector(".tab-favicon");
         var favicon = tabProperties.favicon, faviconClass = tabProperties.faviconClass;
-        faviconEl.className = "chrome-tab-favicon";
+        faviconEl.className = "tab-favicon";
         faviconEl.style.backgroundImage = "";
         if (favicon || faviconClass) {
             if (faviconClass) {
-                faviconEl.className = ["chrome-tab-favicon", faviconClass].join(" ");
+                faviconEl.className = ["tab-favicon", faviconClass].join(" ");
             }
             if (favicon) {
                 faviconEl.style.backgroundImage = "url('".concat(favicon, "')");
@@ -453,14 +454,14 @@ var ChromeTabs = /** @class */ (function () {
     };
     ChromeTabs.prototype.cleanUpPreviouslyDraggedTabs = function () {
         this.tabEls.forEach(function (tabEl) {
-            return tabEl.classList.remove("chrome-tab-was-just-dragged");
+            return tabEl.classList.remove("tab-was-just-dragged");
         });
     };
     ChromeTabs.prototype.disposeDraggabilly = function () {
         if (this.isDragging) {
             this.isDragging = false;
-            this.el.classList.remove("chrome-tabs-is-sorting");
-            this.draggabillyDragging.element.classList.remove("chrome-tab-is-dragging");
+            this.el.classList.remove("tabs-is-sorting");
+            this.draggabillyDragging.element.classList.remove("tab-is-dragging");
             this.draggabillyDragging.element.style.transform = "";
             this.draggabillyDragging.dragEnd();
             this.draggabillyDragging.isDragging = false;
@@ -480,7 +481,7 @@ var ChromeTabs = /** @class */ (function () {
             var originalTabPositionX = tabPositions[originalIndex];
             var draggabilly = new draggabilly_1.default(tabEl, {
                 axis: "x",
-                handle: ".chrome-tab-drag-handle",
+                handle: ".tab-drag-handle",
                 containment: false,
             });
             _this.draggabillies.push(draggabilly);
@@ -491,8 +492,8 @@ var ChromeTabs = /** @class */ (function () {
             draggabilly.on("dragStart", function (_) {
                 _this.isDragging = true;
                 _this.draggabillyDragging = draggabilly;
-                tabEl.classList.add("chrome-tab-is-dragging");
-                _this.el.classList.add("chrome-tabs-is-sorting");
+                tabEl.classList.add("tab-is-dragging");
+                _this.el.classList.add("tabs-is-sorting");
                 _this.emit("dragStart", {});
             });
             draggabilly.on("dragEnd", function (_) {
@@ -505,9 +506,9 @@ var ChromeTabs = /** @class */ (function () {
                     tabEl.style.left = "0";
                     tabEl.style.transform = "translate3d(".concat(finalTranslateX, "px, 0, 0)");
                     requestAnimationFrame(function (_) {
-                        tabEl.classList.remove("chrome-tab-is-dragging");
-                        _this.el.classList.remove("chrome-tabs-is-sorting");
-                        tabEl.classList.add("chrome-tab-was-just-dragged");
+                        tabEl.classList.remove("tab-is-dragging");
+                        _this.el.classList.remove("tabs-is-sorting");
+                        tabEl.classList.add("tab-was-just-dragged");
                         requestAnimationFrame(function (_) {
                             tabEl.style.transform = "";
                             _this.layoutTabs();
@@ -521,7 +522,7 @@ var ChromeTabs = /** @class */ (function () {
                 var tabEls = _this.tabEls;
                 var currentIndex = tabEls.indexOf(tabEl);
                 var currentTabPositionX = originalTabPositionX + moveVector.x;
-                var tabContent = tabEl.querySelector(".chrome-tab-content");
+                var tabContent = tabEl.querySelector(".tab-content");
                 var right = currentTabPositionX + tabContent.clientWidth;
                 var overLeft = currentTabPositionX < -2;
                 var overRight = right > _this.tabContentEl.clientWidth;
diff --git a/dist/hooks/useChromeTabs.js b/dist/hooks/useChromeTabs.js
index 4ce91a5c697288fa45c60f7d7fdb9f5bf2276236..c86abe8737e1abef2fae7f5045b1b03dd94c0a44 100644
--- a/dist/hooks/useChromeTabs.js
+++ b/dist/hooks/useChromeTabs.js
@@ -1,6 +1,6 @@
 "use strict";
 var __assign = (this && this.__assign) || function () {
-    __assign = Object.assign || function(t) {
+    __assign = Object.assign || function (t) {
         for (var s, i = 1, n = arguments.length; i < n; i++) {
             s = arguments[i];
             for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
@@ -10,20 +10,20 @@ var __assign = (this && this.__assign) || function () {
     };
     return __assign.apply(this, arguments);
 };
-var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
+var __createBinding = (this && this.__createBinding) || (Object.create ? (function (o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     var desc = Object.getOwnPropertyDescriptor(m, k);
     if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
-      desc = { enumerable: true, get: function() { return m[k]; } };
+        desc = { enumerable: true, get: function () { return m[k]; } };
     }
     Object.defineProperty(o, k2, desc);
-}) : (function(o, m, k, k2) {
+}) : (function (o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     o[k2] = m[k];
 }));
-var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
+var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function (o, v) {
     Object.defineProperty(o, "default", { enumerable: true, value: v });
-}) : function(o, v) {
+}) : function (o, v) {
     o["default"] = v;
 });
 var __importStar = (this && this.__importStar) || function (mod) {
@@ -42,17 +42,17 @@ var react_1 = __importStar(require("react"));
 var chrome_tabs_1 = __importDefault(require("../chrome-tabs"));
 var useLatest_1 = require("./useLatest");
 var ChromeTabsWrapper = (0, react_1.forwardRef)(function (props, ref) {
-    var classList = ["chrome-tabs"];
+    var classList = ["tabs"];
     if (props.darkMode) {
-        classList.push("chrome-tabs-dark-theme");
+        classList.push("tabs-dark-theme");
     }
     if (props.className) {
         classList.push(props.className);
     }
     return (react_1.default.createElement("div", { ref: ref, className: classList.join(" "), style: { "--tab-content-margin": "9px", display: "flex" } },
-        react_1.default.createElement("div", { className: "chrome-tabs-content" }),
-        react_1.default.createElement("div", { className: "chrome-tabs-toolbar-right", style: { zIndex: 1, position: "relative" } }, props.toolbar || null),
-        react_1.default.createElement("div", { className: "chrome-tabs-bottom-bar" })));
+        react_1.default.createElement("div", { className: "tabs-content" }),
+        react_1.default.createElement("div", { className: "tabs-toolbar-right", style: { zIndex: 1, position: "relative" } }, props.toolbar || null),
+        react_1.default.createElement("div", { className: "tabs-bottom-bar" })));
 });
 function useChromeTabs(listeners, options) {
     if (options === void 0) { options = { draggable: true }; }
@@ -189,7 +189,7 @@ function useChromeTabs(listeners, options) {
     }, []);
     var updateTabByIndex = (0, react_1.useCallback)(function (index, tab) {
         var _a, _b, _c;
-        var tabs = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(".chrome-tab");
+        var tabs = (_a = ref.current) === null || _a === void 0 ? void 0 : _a.querySelectorAll(".tab");
         if (tabs) {
             var ele = tabs.item(index);
             if (ele) {
